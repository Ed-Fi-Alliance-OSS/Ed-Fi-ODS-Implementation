# SPDX-License-Identifier: Apache-2.0
# Licensed to the Ed-Fi Alliance under one or more agreements.
# The Ed-Fi Alliance licenses this file to you under the Apache License, Version 2.0.
# See the LICENSE and NOTICES files in the project root for more information.

# This docker compose is only intended for local testing of the dockerfiles in
# the parent docker/ directory. Those files load the Ed-Fi components from
# publisehd NuGet packages rather than from source code.

services:
  db-ods-sandbox:
    build:
      context: ods-api-db-ods-sandbox/ubuntu/mssql
      dockerfile: Dockerfile
      args:
        ODS_POPULATED_VERSION: ${MSSQL_ODS_POPULATED_VERSION}
        TPDM_POPULATED_VERSION: ${MSSQL_TPDM_POPULATED_VERSION}
        ODS_MINIMAL_VERSION: ${MSSQL_ODS_MINIMAL_VERSION}
        TPDM_MINIMAL_VERSION: ${MSSQL_TPDM_MINIMAL_VERSION}
        STANDARD_VERSION: ${STANDARD_VERSION}
        EXTENSION_VERSION: ${EXTENSION_VERSION}
    environment:
      SQLSERVER_USER: ${SQLSERVER_USER}
      SQLSERVER_PASSWORD: ${SQLSERVER_PASSWORD}
      TPDM_ENABLED: ${TPDM_ENABLED:-true}
    volumes:
      - vol-db-ods:/var/opt/mssql/data
      - vol-db-ods:/var/opt/mssql/log
    restart: always
    container_name: ed-fi-db-ods
    hostname: ed-fi-db-ods
    healthcheck:
      test: /opt/mssql-tools/bin/sqlcmd -U ${SQLSERVER_USER} -P "${SQLSERVER_PASSWORD}" -Q "SELECT 1"
      start_period: "60s"
      retries: 3

  db-admin:
    build:
      context: ods-api-db-admin/ubuntu/mssql
      dockerfile: Dockerfile
      args:
        ADMIN_VERSION: ${MSSQL_ADMIN_VERSION}
        SECURITY_VERSION: ${MSSQL_SECURITY_VERSION}
        STANDARD_VERSION: ${STANDARD_VERSION}
    environment:
      SQLSERVER_USER: ${SQLSERVER_USER}
      SQLSERVER_PASSWORD: ${SQLSERVER_PASSWORD}
    volumes:
      - vol-db-admin:/var/opt/mssql/data
      - vol-db-admin:/var/opt/mssql/log
    restart: always
    container_name: ed-fi-db-admin
    hostname: ed-fi-db-admin
    healthcheck:
      test: /opt/mssql-tools/bin/sqlcmd -U ${SQLSERVER_USER} -P "${SQLSERVER_PASSWORD}" -Q "SELECT 1"
      start_period: "60s"
      retries: 3

  api:
    build:
      context: ods-api-web-api/alpine/mssql
      dockerfile: Dockerfile
      args:
        API_VERSION: ${API_VERSION}
        STANDARD_VERSION: ${STANDARD_VERSION}
    environment:
      SQLSERVER_USER: ${SQLSERVER_USER}
      SQLSERVER_PASSWORD: ${SQLSERVER_PASSWORD}
      SQLSERVER_ODS_DATASOURCE: ed-fi-db-ods
      SQLSERVER_ADMIN_DATASOURCE: ed-fi-db-admin
      PATH_BASE: ""
      TPDM_ENABLED: ${TPDM_ENABLED:-true}
      API_HEALTHCHECK_TEST: ${API_HEALTHCHECK_TEST?Please consult env.example to set the API healthcheck test}
      ODS_CONNECTION_STRING_ENCRYPTION_KEY: ${ODS_CONNECTION_STRING_ENCRYPTION_KEY}
    volumes:
      - ${LOGS_FOLDER}:/app/logs
    ports:
      - 8001:80
    depends_on:
      - db-ods-sandbox
      - db-admin
    restart: always
    container_name: ed-fi-ods-api
    hostname: ed-fi-ods-api
    healthcheck:
      test: ${API_HEALTHCHECK_TEST}
      start_period: "60s"
      retries: 3

  swagger:
    build:
      context: ods-api-swaggerui/alpine
      dockerfile: Dockerfile
      args:
        SWAGGER_VERSION: ${SWAGGER_VERSION}
    environment:
      SAMPLE_KEY: ${POPULATED_KEY}
      SAMPLE_SECRET: ${POPULATED_SECRET}
      VERSION_URL: http://localhost:8001
      SWAGGER_HEALTHCHECK_TEST: ${SWAGGER_HEALTHCHECK_TEST?Please consult env.example to set the SWAGGER healthcheck test}
    ports:
      - 8002:80
    depends_on:
      - api
    restart: always
    container_name: ed-fi-swagger
    hostname: ed-fi-swagger
    healthcheck:
      test: ${SWAGGER_HEALTHCHECK_TEST}
      start_period: "60s"
      retries: 3

  sandbox:
    build:
      context: ods-api-web-sandbox-admin/alpine/mssql
      dockerfile: Dockerfile
      args:
        SANDBOX_VERSION: ${SANDBOX_VERSION}
    environment:
      PATH_BASE: sandbox
      OAUTH_URL: http://localhost:8001/oauth/
      SQLSERVER_USER: ${SQLSERVER_USER}
      SQLSERVER_PASSWORD: ${SQLSERVER_PASSWORD}
      SQLSERVER_ODS_DATASOURCE: ed-fi-db-ods
      SQLSERVER_ADMIN_DATASOURCE: ed-fi-db-admin
      ADMIN_USER: ${ADMIN_USER:-test@ed-fi.org}
      ADMIN_PASSWORD: ${ADMIN_PASSWORD:-***REMOVED***}
      MINIMAL_KEY: ${MINIMAL_KEY:-minimalKey}
      MINIMAL_SECRET: ${MINIMAL_SECRET:-minimalSecret}
      POPULATED_KEY: ${POPULATED_KEY:-populatedKey}
      POPULATED_SECRET: ${POPULATED_SECRET:-populatedSecret}
    volumes:
      - ${LOGS_FOLDER}:/app/logs
    ports:
      - 8003:80
    depends_on:
      - api
    restart: always
    container_name: ed-fi-sandbox-admin
    hostname: ed-fi-sandbox-admin

volumes:
  vol-db-admin:
    driver: local
    name: vol-nuget-db-admin-sandbox
  vol-db-ods:
    driver: local
    name: vol-nuget-db-ods-sandbox
