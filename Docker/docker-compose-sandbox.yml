# SPDX-License-Identifier: Apache-2.0
# Licensed to the Ed-Fi Alliance under one or more agreements.
# The Ed-Fi Alliance licenses this file to you under the Apache License, Version 2.0.
# See the LICENSE and NOTICES files in the project root for more information.

# This docker compose is only intended for local testing of the dockerfiles in
# the parent docker/ directory. Those files load the Ed-Fi components from
# publisehd NuGet packages rather than from source code.

version: "3.8"

services:
  db-ods-sandbox:
    build:
      context: ods-api-db-ods-sandbox/alpine/pgsql
      dockerfile: Dockerfile
      args:
        ODS_POPULATED_VERSION: ${ODS_POPULATED_VERSION:-7.0.827}
        TPDM_POPULATED_VERSION: ${TPDM_POPULATED_VERSION:-7.0.665}
        ODS_MINIMAL_VERSION: ${ODS_MINIMAL_VERSION:-7.0.827}
        TPDM_MINIMAL_VERSION: ${TPDM_MINIMAL_VERSION:-7.0.665}
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      TPDM_ENABLED: ${TPDM_ENABLED:-true}
    volumes:
      - vol-db-ods:/var/lib/postgresql/data
    restart: always
    container_name: ed-fi-db-ods
    hostname: ed-fi-db-ods
    healthcheck:
      test: ["CMD-SHELL", "pg_isready  -U ${POSTGRES_USER}"]
      start_period: "60s"
      retries: 3

  db-admin:
    build:
      context: ods-api-db-admin/alpine/pgsql
      dockerfile: Dockerfile
      args:
        ADMIN_VERSION: ${ADMIN_VERSION:-7.0.252}
        SECURITY_VERSION: ${SECURITY_VERSION:-7.0.233}
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      API_MODE: SharedInstsance
    volumes:
      - vol-db-admin:/var/lib/postgresql/data
    restart: always
    container_name: ed-fi-db-admin
    hostname: ed-fi-db-admin
    healthcheck:
      test: ["CMD-SHELL", "pg_isready  -U ${POSTGRES_USER}"]
      start_period: "60s"
      retries: 3

  api:
    build:
      context: ods-api-web-api/alpine/pgsql
      dockerfile: Dockerfile
      args:
        API_VERSION: ${API_VERSION:-7.0.2195}
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_PORT: 5432
      API_MODE: sandbox
      ODS_POSTGRES_HOST: ed-fi-db-ods
      ADMIN_POSTGRES_HOST: ed-fi-db-admin
      PATH_BASE: ""
      TPDM_ENABLED: ${TPDM_ENABLED:-true}
      API_HEALTHCHECK_TEST: ${API_HEALTHCHECK_TEST?Please consult env.example to set the API healthcheck test}
      NPG_POOLING_ENABLED: ${NPG_POOLING_ENABLED:-false}
      NPG_API_MAX_POOL_SIZE_ODS: ${NPG_API_MAX_POOL_SIZE_ODS}
      NPG_API_MAX_POOL_SIZE_ADMIN: ${NPG_API_MAX_POOL_SIZE_ADMIN}
      NPG_API_MAX_POOL_SIZE_SECURITY: ${NPG_API_MAX_POOL_SIZE_SECURITY}
      NPG_API_MAX_POOL_SIZE_MASTER: ${NPG_API_MAX_POOL_SIZE_MASTER}
      ODS_CONNECTION_STRING_ENCRYPTION_KEY: ${ODS_CONNECTION_STRING_ENCRYPTION_KEY}
    volumes:
      - ${LOGS_FOLDER}:/app/logs
    ports:
      - 8001:80
    depends_on:
      - db-ods-sandbox
      - db-admin
    restart: always
    container_name: ed-fi-ods-api
    hostname: ed-fi-ods-api
    healthcheck:
      test: ${API_HEALTHCHECK_TEST}
      start_period: "60s"
      retries: 3

  swagger:
    build:
      context: ods-api-swaggerui/alpine
      dockerfile: Dockerfile
      args:
        SWAGGER_VERSION: ${SWAGGER_VERSION:-7.0.2195}
    environment:
      SAMPLE_KEY: ${POPULATED_KEY}
      SAMPLE_SECRET: ${POPULATED_SECRET}
      VERSION_URL: http://localhost:8001
      SWAGGER_HEALTHCHECK_TEST: ${SWAGGER_HEALTHCHECK_TEST?Please consult env.example to set the SWAGGER healthcheck test}
    ports:
      - 8002:80
    depends_on:
      - api
    restart: always
    container_name: ed-fi-swagger
    hostname: ed-fi-swagger
    healthcheck:
      test: ${SWAGGER_HEALTHCHECK_TEST}
      start_period: "60s"
      retries: 3

  sandbox:
    build:
      context: ods-api-web-sandbox-admin/alpine/pgsql
      dockerfile: Dockerfile
      args:
        SANDBOX_VERSION: ${SANDBOX_VERSION:-7.0.2195}
    environment:
      PATH_BASE: sandbox
      OAUTH_URL: http://localhost:8001/oauth/
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_PORT: 5432      
      ODS_POSTGRES_HOST: ed-fi-db-ods
      ADMIN_POSTGRES_HOST: ed-fi-db-admin
      NPG_POOLING_ENABLED: ${NPG_POOLING_ENABLED:-false}
      NPG_API_MAX_POOL_SIZE_ODS: ${NPG_API_MAX_POOL_SIZE_ODS}
      NPG_API_MAX_POOL_SIZE_ADMIN: ${NPG_API_MAX_POOL_SIZE_ADMIN}
      NPG_API_MAX_POOL_SIZE_SECURITY: ${NPG_API_MAX_POOL_SIZE_SECURITY}
      NPG_API_MAX_POOL_SIZE_MASTER: ${NPG_API_MAX_POOL_SIZE_MASTER}
      ADMIN_USER: ${ADMIN_USER:-test@ed-fi.org}
      ADMIN_PASSWORD: ${ADMIN_PASSWORD:-***REMOVED***}
      MINIMAL_KEY: ${MINIMAL_KEY:-minimalKey}
      MINIMAL_SECRET: ${MINIMAL_SECRET:-minimalSecret}
      POPULATED_KEY: ${POPULATED_KEY:-populatedKey}
      POPULATED_SECRET: ${POPULATED_SECRET:-populatedSecret}
    ports:
      - 8003:80
    depends_on:
      - api
    restart: always
    container_name: ed-fi-sandbox-admin
    hostname: ed-fi-sandbox-admin

volumes:
  vol-db-admin:
    driver: local
    name: vol-nuget-db-admin-sandbox
  vol-db-ods:
    driver: local
    name: vol-nuget-db-ods-sandbox
