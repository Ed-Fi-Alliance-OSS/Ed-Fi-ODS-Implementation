# SPDX-License-Identifier: Apache-2.0
# Licensed to the Ed-Fi Alliance under one or more agreements.
# The Ed-Fi Alliance licenses this file to you under the Apache License, Version 2.0.
# See the LICENSE and NOTICES files in the project root for more information.

name: InitDev, Unit tests, Integration tests, Package

on:
  pull_request:
   branches: [main]
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'warning'
  repository_dispatch:
    types: [triggered-from-ods-repo]

env:
  INFORMATIONAL_VERSION: "6.1"
  BUILD_INCREMENTER: "1"
  CONFIGURATION: "Release"
  VERSION_MAJOR: "6"
  VERSION_MINOR: "1"
  HEAD_REF:  ${{ GITHUB.HEAD_REF }}
  REF_NAME:  ${{ GITHUB.REF_NAME }}
  ODS_CURRENT_BRANCH: ${{ github.event.client_payload.ref }}
  EDFI_SUITE_NUMBER: "Suite3"

jobs:
  build:

    runs-on: windows-latest

    steps:
    - name: Setup .NET
      uses: actions/setup-dotnet@c0d4ad69d8bd405d234f1c9166d383b7a4f69ed8 # 2.1.0
      with:
        dotnet-version: 6.0.x
    - name: Support longpaths
      run: git config --system core.longpaths true
    - name: Checkout Ed-Fi-ODS-Implementation
      uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579 # v2
      with:
          repository: Ed-Fi-Alliance-OSS/Ed-Fi-ODS-Implementation
          path: Ed-Fi-ODS-Implementation/
    - name: Is pull request branch exists in Ed-Fi-ODS-Implementation
      working-directory: ./Ed-Fi-ODS-Implementation/
      shell: pwsh
      run: |
            $odsBranch = '${{ env.ODS_CURRENT_BRANCH }}'
            Write-Host "OdsBranch: $odsBranch"
            if($odsBranch -ne ''){
              $patternName = "refs/heads/$odsBranch"
              $does_corresponding_branch_exist = $false
              $does_corresponding_branch_exist = git ls-remote --heads origin $odsBranch | Select-String -Pattern $patternName -SimpleMatch -Quiet
              if ($does_corresponding_branch_exist -eq $true) {
                Write-Host "Corresponding branch for $odsBranch exists in Implementation repo, so checking it out"
                git fetch origin odsBranch
                git checkout odsBranch
              }
            } else {
              Write-Host "ref_name: ${{env.REF_NAME}}"
              $current_branch = '${{env.REF_NAME}}'
              if ($current_branch -like "*/merge"){
                Write-Host "ref_name is PR, so using head_ref: ${{env.HEAD_REF}}"
                $current_branch = '${{env.HEAD_REF}}'
              }
              $patternName = "refs/heads/$current_branch"
              Write-Host "Pattern Name is " $patternName -fore GREEN
              $is_pull_request_branch = $false
              $is_pull_request_branch = git ls-remote --heads origin ${{ env.CURRENT_BRANCH }} | Select-String -Pattern $patternName -SimpleMatch -Quiet
              if ($is_pull_request_branch -eq $true) {
                Write-Host "Found Implementation branch with name ${{ env.CURRENT_BRANCH }} so checking it out"
                git fetch origin ${{ env.CURRENT_BRANCH }}
                git checkout ${{ env.CURRENT_BRANCH }}
              }
            }
    - name: Checkout Ed-Fi-ODS
      uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579 # v2
      with:
          repository: Ed-Fi-Alliance-OSS/Ed-Fi-ODS
          path: Ed-Fi-ODS/
    - name: Is pull request branch exists in Ed-Fi-ODS
      working-directory: ./Ed-Fi-ODS/
      shell: pwsh
      run: |
           $odsBranch = '${{ env.ODS_CURRENT_BRANCH }}'
           Write-Host "OdsBranch: $odsBranch"
           if($odsBranch -ne ''){
              Write-Host "Checking out ODS branch of $odsBranch"
              git fetch origin $odsBranch
              git checkout $odsBranch
           } else {
              Write-Host "ref_name: ${{env.REF_NAME}}"
              $current_branch = '${{env.REF_NAME}}'
              if ($current_branch -like "*/merge"){
                Write-Host "ref_name is PR, so using head_ref: ${{env.HEAD_REF}}"
                $current_branch = '${{env.HEAD_REF}}'
              }
              
              Write-Host "Current Branch: $current_branch"
              $patternName = 'refs/heads/' +  $current_branch
              $branch_exists = $false
              $branch_exists = git ls-remote --heads origin $current_branch | Select-String -Pattern $patternName -SimpleMatch -Quiet
              if ($branch_exists -eq $true) {
                Write-Host "Current branch exists, so setting to $current_branch"
                git fetch origin $current_branch
                git checkout $current_branch
              } else {
                Write-Host "did not match on any results for changing ODS checkout branch"
              }
           }
    - name: Setup Sql Server Connection String
      working-directory: ./Ed-Fi-ODS-Implementation/
      run: |
        $ErrorActionPreference = 'Stop'
        $PSVersionTable
        [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12
           
        # EdFi.Ods.WebApi
        dotnet user-secrets set --id f1506d66-289c-44cb-a2e2-80411cc690ec 'ConnectionStrings:EdFi_Ods'      'Server=(LocalDB)\\MSSQLLocalDB; Database=EdFi_{0}; Connection Timeout=30; Trusted_Connection=True; Application Name=EdFi.Ods.WebApi;'
        dotnet user-secrets set --id f1506d66-289c-44cb-a2e2-80411cc690ec 'ConnectionStrings:EdFi_Admin'    'Server=(LocalDB)\\MSSQLLocalDB; Database=EdFi_Admin; Connection Timeout=30; Trusted_Connection=True; Application Name=EdFi.Ods.WebApi;'
        dotnet user-secrets set --id f1506d66-289c-44cb-a2e2-80411cc690ec 'ConnectionStrings:EdFi_Security' 'Server=(LocalDB)\\MSSQLLocalDB; Database=EdFi_Security; Connection Timeout=30; Trusted_Connection=True; Persist Security Info=True; Application Name=EdFi.Ods.WebApi;'
        dotnet user-secrets set --id f1506d66-289c-44cb-a2e2-80411cc690ec 'ConnectionStrings:EdFi_Master'   'Server=(LocalDB)\\MSSQLLocalDB; Database=master; Connection Timeout=30; Trusted_Connection=True; Application Name=EdFi.Ods.WebApi;'

        # EdFi.Ods.Api.IntegrationTestHarness
        dotnet user-secrets set --id f1506d66-289c-44cb-a2e2-80411cc690ed 'ConnectionStrings:EdFi_Ods'      'Server=(LocalDB)\MSSQLLocalDB; Database=EdFi_Ods_Populated_Template_Test; Connection Timeout=30; Trusted_Connection=True; Application Name=EdFi.Ods.Api.IntegrationTestHarness'
        dotnet user-secrets set --id f1506d66-289c-44cb-a2e2-80411cc690ed 'ConnectionStrings:EdFi_Admin'    'Server=(LocalDB)\MSSQLLocalDB; Database=EdFi_Admin; Connection Timeout=30; Trusted_Connection=True; Application Name=EdFi.Ods.Api.IntegrationTestHarness'
        dotnet user-secrets set --id f1506d66-289c-44cb-a2e2-80411cc690ed 'ConnectionStrings:EdFi_Security' 'Server=(LocalDB)\MSSQLLocalDB; Database=EdFi_Security; Connection Timeout=30; Trusted_Connection=True; Persist Security Info=True; Application Name=EdFi.Ods.Api.IntegrationTestHarness'
        dotnet user-secrets set --id f1506d66-289c-44cb-a2e2-80411cc690ed 'ConnectionStrings:EdFi_Master'   'Server=(LocalDB)\MSSQLLocalDB; Database=master; Connection Timeout=30; Trusted_Connection=True; Application Name=EdFi.Ods.Api.IntegrationTestHarness'
        
        Write-Host "Starting MSSQLLocalDB"
        SQLLocalDB start MSSQLLocalDB
      shell: pwsh
    - name: ODS/API InitDev, SdkGen, Integration Test, Unit Test, Package
      working-directory: ./Ed-Fi-ODS-Implementation/
      run: |
        $ErrorActionPreference = 'Stop'
        [int]$BuildCounter =  "${{ github.run_number }}"
        [int]$BuildIncrementer = "${{ env.BUILD_INCREMENTER }}"
        [int]$newRevision =  $BuildCounter + $BuildIncrementer
        [string]$version = "${{ env.VERSION_MAJOR}}"+ "." +"${{ env.VERSION_MINOR}}" + "." + $newRevision.ToString()
        .\build.github.ps1 -PackageVersion $version -RepositoryRoot $env:GITHUB_WORKSPACE -UsePlugins -RunSdkGen -GenerateApiSdkPackage -GenerateTestSdkPackage -RunPostman -RunPester -RunDotnetTest -PackageOutput "$env:GITHUB_WORKSPACE/Ed-Fi-ODS-Implementation/NugetPackages"
      shell: pwsh
    - name: Upload initdev logs
      if: success() || failure()
      uses: actions/upload-artifact@3cea5372237819ed00197afe530f5a7ea3e805c8 # v3.1.0
      with:
        name: Initdev logs
        path: |
          ${{ github.workspace }}/Ed-Fi-ODS-Implementation/Application/EdFi.Ods.Api.IntegrationTestHarness/bin/**/PostmanIntegrationTestsLog.log
          ${{ github.workspace }}/Ed-Fi-ODS-Implementation/Application/EdFi.Ods.Api.IntegrationTestHarness/bin/**/*TestHarnessLog.log
    - name: Create EdF.Ods.WebApi.Prerelease for Staging
      working-directory: ./Ed-Fi-ODS-Implementation/
      run: |
        $ErrorActionPreference = 'Stop'
        . $env:GITHUB_WORKSPACE/Ed-Fi-ODS-Implementation/Initialize-PowershellForDevelopment.ps1
        [int]$BuildCounter =  "${{ github.run_number }}"
        [int]$BuildIncrementer = "${{ env.BUILD_INCREMENTER }}"
        [int]$newRevision =  $BuildCounter + $BuildIncrementer
        $params = @{
                ProjectPath           = $env:GITHUB_WORKSPACE + '/Ed-Fi-ODS-Implementation/Application/EdFi.Ods.WebApi'
                PackageDefinitionFile = $env:GITHUB_WORKSPACE + '/Ed-Fi-ODS-Implementation/Application/EdFi.Ods.WebApi/bin/**/**/publish/EdFi.Ods.WebApi.Prerelease.nuspec'
                PackageId             = 'EdFi.' + $env:EDFI_SUITE_NUMBER + '.Ods.WebApi.Prerelease'
                Version               = '${{ env.VERSION_MAJOR}}.${{ env.VERSION_MINOR}}.' + $newRevision.ToString()
                Properties            = (Get-DefaultNuGetProperties)
                OutputDirectory       = $env:GITHUB_WORKSPACE + '/Ed-Fi-ODS-Implementation/NugetPackages'
        }
        New-WebPackage @params
      shell: pwsh
    - name: Upload SandboxAdmin,SwaggerUI,WebApi,Databases,EdFi.Ods.Api.Sdk,EdFi.SdkGen NugetPackages
      if: success()
      uses: actions/upload-artifact@3cea5372237819ed00197afe530f5a7ea3e805c8 # v3.1.0
      with:
        name: NugetPackages.Artifacts
        path: ${{ github.workspace }}/Ed-Fi-ODS-Implementation/NugetPackages/*.nupkg
