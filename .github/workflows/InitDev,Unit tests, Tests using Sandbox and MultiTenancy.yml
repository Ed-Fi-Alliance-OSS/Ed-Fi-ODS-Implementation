# SPDX-License-Identifier: Apache-2.0
# Licensed to the Ed-Fi Alliance under one or more agreements.
# The Ed-Fi Alliance licenses this file to you under the Apache License, Version 2.0.
# See the LICENSE and NOTICES files in the project root for more information.

name: InitDev, Smoke Tests Sandbox, and MultiTenancy

on:
  pull_request:
   branches: [main, 'ODS-*']
  push:
   branches: [main]
  workflow_dispatch:
  repository_dispatch:
    types: [triggered-from-ods-repo]

env:
  INFORMATIONAL_VERSION: "7.0"
  BUILD_INCREMENTER: "1"
  CONFIGURATION: "Release"
  VERSION_MAJOR: "7"
  VERSION_MINOR: "0"
  HEAD_REF:  ${{ GITHUB.HEAD_REF }}
  REF_NAME:  ${{ GITHUB.REF_NAME }}
  REPOSITORY_DISPATCH_BRANCH: ${{ github.event.client_payload.branch }}
  EDFI_SUITE_NUMBER: "Suite3"
  msbuild_buildConfiguration: "release"

jobs:
  FindStandardVersions:
    runs-on: ubuntu-latest    
    outputs:
      StandardVersions: ${{ steps.Set_StandardVersions.outputs.StandardVersions }}
    steps:
    - name: Checkout Ed-Fi-ODS-Implementation
      uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579 # v2
      with:
          repository: Ed-Fi-Alliance-OSS/Ed-Fi-ODS-Implementation
          path: Ed-Fi-ODS-Implementation/    
    - name: Checkout Ed-Fi-ODS
      uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579 # v2
      with:
          repository: Ed-Fi-Alliance-OSS/Ed-Fi-ODS
          path: Ed-Fi-ODS/
    - name: Is pull request branch exists in Ed-Fi-ODS
      working-directory: ./Ed-Fi-ODS-Implementation/
      shell: pwsh
      run: |
           .\build.githubactions.ps1 CheckoutBranch -RelativeRepoPath "../Ed-Fi-ODS"          
    - name: Set StandardVersions
      id: Set_StandardVersions
      working-directory: ./Ed-Fi-ODS/
      run: |
        $output = .\build.githubactions.ps1 StandardVersions -ProjectFile "$env:GITHUB_WORKSPACE/Ed-Fi-ODS/Application/EdFi.Ods.Standard/EdFi.Ods.Standard.csproj" | Out-String
        echo "StandardVersions=$output" >> $env:GITHUB_OUTPUT
        Write-host "StandardVersions is  $output"
      shell: pwsh
  build:
    if: ${{ always() }}
    needs: FindStandardVersions
    runs-on: windows-latest
    strategy:
      matrix:
        StandardVersion: ${{ fromJson(needs.FindStandardVersions.outputs.StandardVersions) }}
    name: build (Standard Version ${{ matrix.StandardVersion }}) 

    steps:
    - name: Setup .NET
      uses: actions/setup-dotnet@c0d4ad69d8bd405d234f1c9166d383b7a4f69ed8 # 2.1.0
      with:
        dotnet-version: 6.0.x
    - name: Support longpaths
      run: git config --system core.longpaths true
    - name: Checkout Ed-Fi-ODS-Implementation
      uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579 # v2
      with:
          repository: Ed-Fi-Alliance-OSS/Ed-Fi-ODS-Implementation
          path: Ed-Fi-ODS-Implementation/
    - name: Is pull request branch exists in Ed-Fi-ODS-Implementation
      working-directory: ./Ed-Fi-ODS-Implementation/
      shell: powershell
      run: |
           .\build.githubactions.ps1 CheckoutBranch -RelativeRepoPath "."
    - name: Checkout Ed-Fi-ODS
      uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579 # v2
      with:
          repository: Ed-Fi-Alliance-OSS/Ed-Fi-ODS
          path: Ed-Fi-ODS/
    - name: Is pull request branch exists in Ed-Fi-ODS
      working-directory: ./Ed-Fi-ODS-Implementation/
      shell: powershell
      run: |
           .\build.githubactions.ps1 CheckoutBranch -RelativeRepoPath "../Ed-Fi-ODS"
    - name: Cache Nuget packages   
      uses: actions/cache@58c146cc91c5b9e778e71775dfe9bf1442ad9a12 #v3.2.3
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj*', '**/configuration.packages.json') }}
        restore-keys: |
          ${{ runner.os }}-nuget-
          ${{ runner.os }}-
          nuget-
        enableCrossOsArchive: true
    - name: Restore NuGet packages
      working-directory: ./Ed-Fi-ODS-Implementation/
      run: |
        .\build.githubactions.ps1 restore -Solution "$env:GITHUB_WORKSPACE/Ed-Fi-ODS/Utilities/SdkGen/EdFi.SdkGen.sln"
        .\build.githubactions.ps1 restore -Solution "$env:GITHUB_WORKSPACE/Ed-Fi-ODS-Implementation/Application/Ed-Fi-Ods.sln"
        .\build.githubactions.ps1 restore -Solution "$env:GITHUB_WORKSPACE/Ed-Fi-ODS/Utilities/DataLoading/LoadTools.sln"
      shell: powershell
    - name: Install sql-server-2019 & sqlpackage
      shell: powershell
      run: |
          choco install sql-server-2019  -y --params "'/IGNOREPENDINGREBOOT /IACCEPTSQLSERVERLICENSETERMS /Q /ACTION=install /INSTANCEID=MSSQLSERVER /INSTANCENAME=MSSQLSERVER /TCPENABLED=1 /UPDATEENABLED=FALSE /FEATURES=SQL,Tools'" --execution-timeout=$installTimeout
          choco install sqlpackage
    - name: ODS/API InitDev and SdkGen
      working-directory: ./Ed-Fi-ODS-Implementation/
      run: |
        $ErrorActionPreference = 'Stop'
        [int]$BuildCounter =  "${{ github.run_number }}"
        [int]$BuildIncrementer = "${{ env.BUILD_INCREMENTER }}"
        [int]$newRevision =  $BuildCounter + $BuildIncrementer
        [string]$version = "${{ env.VERSION_MAJOR}}"+ "." +"${{ env.VERSION_MINOR}}" + "." + $newRevision.ToString()
        .\build.github.ps1 -PackageVersion $version -RepositoryRoot $env:GITHUB_WORKSPACE -UsePlugins -RunSdkGen -GenerateTestSdkPackage -PackageOutput "$env:GITHUB_WORKSPACE/Ed-Fi-ODS-Implementation/NugetPackages" -NoPackaging -NoRestore -StandardVersion ${{ matrix.StandardVersion }}
      shell: powershell
    - name: Upload initdev logs
      if: success() || failure()
      uses: actions/upload-artifact@3cea5372237819ed00197afe530f5a7ea3e805c8 # v3.1.0
      with:
        name: Initdev logs
        path: |
          ${{ github.workspace }}/Ed-Fi-ODS-Implementation/Application/EdFi.Ods.Api.IntegrationTestHarness/bin/**/PostmanIntegrationTestsLog.log
          ${{ github.workspace }}/Ed-Fi-ODS-Implementation/Application/EdFi.Ods.Api.IntegrationTestHarness/bin/**/*TestHarnessLog.log
    - name: Run Unit tests for EdFi.LoadTools 
      working-directory: ./Ed-Fi-ODS-Implementation/
      run: |
        .\build.githubactions.ps1 Restore -Solution "$env:GITHUB_WORKSPACE/Ed-Fi-ODS/Utilities/DataLoading/LoadTools.sln"
        .\build.githubactions.ps1 Build -Solution "$env:GITHUB_WORKSPACE/Ed-Fi-ODS/Utilities/DataLoading/LoadTools.sln"        
        .\build.githubactions.ps1 Test -Configuration ${{ env.CONFIGURATION }} -Solution "$env:GITHUB_WORKSPACE/Ed-Fi-ODS/Utilities/DataLoading/LoadTools.sln" -TestFilter "RunManually"
      shell: powershell
    - name: ODS/API Smoke Test Sandbox
      working-directory: ./Ed-Fi-ODS-Implementation/
      run: |
        $ErrorActionPreference = 'Stop'
        . $env:GITHUB_WORKSPACE/Ed-Fi-ODS-Implementation/Initialize-PowershellForDevelopment.ps1

        Reset-TestPopulatedTemplateDatabase
        $params = @{
                InstallType   = 'Sandbox'
                Engine        = 'SQLServer'
                DropDatabases = $true
                NoDuration    = $true
                UsePlugins    = $true
        }
        Initialize-DeploymentEnvironment @params

        if(Test-Path $env:GITHUB_WORKSPACE/Ed-Fi-ODS/Utilities/DataLoading/EdFi.SmokeTest.Console/bin/Release/net6.0/publish) {
          Remove-Item -Path $env:GITHUB_WORKSPACE/Ed-Fi-ODS/Utilities/DataLoading/EdFi.SmokeTest.Console/bin/Release/net6.0/publish -Recurse
        }
       
        $params = @{
                testSets                 = @("NonDestructiveApi", "NonDestructiveSdk", "DestructiveSdk")
                smokeTestDll             = "$env:GITHUB_WORKSPACE/Ed-Fi-ODS/Utilities/SdkGen/EdFi.SdkGen.Console/csharp/src/EdFi.OdsApi.Sdk/bin/Release/net6.0/EdFi.OdsApi.Sdk.dll"
                testHarnessLogNamePrefix = "SmokeTestSandbox"
        }
        . $env:GITHUB_WORKSPACE/Ed-Fi-ODS-Implementation/logistics/scripts/run-smoke-tests.ps1 @params
      shell: powershell
    - name: Upload Smoke Test Sandbox Logs
      if: success() || failure()
      uses: actions/upload-artifact@3cea5372237819ed00197afe530f5a7ea3e805c8 # v3.1.0
      with:
        name: Smoke Test Sandbox Logs
        path: |
          ${{ github.workspace }}/Ed-Fi-ODS/Utilities/DataLoading/EdFi.SmokeTest.Console/bin/**/EdFi.SmokeTest.log
          ${{ github.workspace }}/Ed-Fi-ODS-Implementation/Application/EdFi.Ods.Api.IntegrationTestHarness/bin/**/SmokeTestSandbox.TestHarnessLog.log
    - name: ODS/API Postman Test MultiTenancy
      working-directory: ./Ed-Fi-ODS-Implementation/
      run: |           
        $ErrorActionPreference = 'Stop'
        . $env:GITHUB_WORKSPACE/Ed-Fi-ODS-Implementation/Initialize-PowershellForDevelopment.ps1

        Set-Multitenancy -tenants Tenant1,Tenant2
        
        Write-FlatHashtable (Get-DeploymentSettings)
        # TODO: Execute Postman MultiTenancy Collection
      shell: powershell
    - name: Upload EdFi.Ods.Api.TestSdk NugetPackage
      if: success()
      uses: actions/upload-artifact@3cea5372237819ed00197afe530f5a7ea3e805c8 # v3.1.0
      with:
        name: NugetPackages.Artifacts
        path: ${{ github.workspace }}/Ed-Fi-ODS-Implementation/NugetPackages/*TestSdk*.nupkg