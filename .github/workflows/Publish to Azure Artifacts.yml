# SPDX-License-Identifier: Apache-2.0
# Licensed to the Ed-Fi Alliance under one or more agreements.
# The Ed-Fi Alliance licenses this file to you under the Apache License, Version 2.0.
# See the LICENSE and NOTICES files in the project root for more information.

name: Publish to Azure Artifacts

on:
  workflow_dispatch:
    inputs:
      timeout:
        description: "Timeout before we stop trying (in milliseconds) for action-workflow-run-wait step"
        required: true
        default: '1800000'
      delay:
        description: "delay between status checks (in milliseconds) for action-workflow-run-wait step"
        required: true
        default: '10000'        
          
  workflow_run:
    workflows: ["InitDev, Smoke Tests", "InitDev, Unit tests, Integration tests, Package", "InitDev, MultiTenancy"]
    types:
      - completed
    branches: [main, 'b-v*-patch*','feature-*']

permissions: read-all

env:
  AZURE_ARTIFACT_URL: "https://pkgs.dev.azure.com/ed-fi-alliance/Ed-Fi-Alliance-OSS/_packaging/EdFi/nuget/v3/index.json"
  AZURE_ARTIFACT_NUGET_KEY: ${{ secrets.AZURE_ARTIFACTS_PERSONAL_ACCESS_TOKEN }}
  VSS_NUGET_EXTERNAL_FEED_ENDPOINTS : '{"endpointCredentials": [{"endpoint": "https://pkgs.dev.azure.com/ed-fi-alliance/Ed-Fi-Alliance-OSS/_packaging/EdFi/nuget/v3/index.json","password": "${{ secrets.AZURE_ARTIFACTS_PERSONAL_ACCESS_TOKEN }}"}]}'
  INITDEV_COMMIT: ${{ github.event.workflow_run.head_sha}}
  REPOSITORY_OWNER: ${{ GITHUB.REPOSITORY_OWNER }}

jobs:
  FindStandardAndExtensionVersions:
      runs-on: ubuntu-latest    
      outputs:
        StandardVersions: ${{ steps.Set_StandardVersions.outputs.StandardVersions }}
        ExtensionVersions: ${{ steps.Set_ExtensionVersions.outputs.ExtensionVersions }}
      steps:
      - name: Checkout Ed-Fi-ODS-Implementation
        uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579 # v2
        with:
            repository: Ed-Fi-Alliance-OSS/Ed-Fi-ODS-Implementation
            path: Ed-Fi-ODS-Implementation/   
      - name: Is pull request branch exists in Ed-Fi-ODS-Implementation
        working-directory: ./Ed-Fi-ODS-Implementation/
        shell: pwsh
        run: |
          .\build.githubactions.ps1 CheckoutBranch -RelativeRepoPath "../"    
      - name: Checkout Ed-Fi-Extensions
        uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579 # v2
        with:
            repository: Ed-Fi-Alliance-OSS/Ed-Fi-Extensions
            path: Ed-Fi-Extensions/
      - name: Is pull request branch exists in Ed-Fi-Extension
        working-directory: ./Ed-Fi-ODS-Implementation/
        shell: pwsh
        run: |
          .\build.githubactions.ps1 CheckoutBranch -RelativeRepoPath "../Ed-Fi-Extensions"  
      - name: Checkout Ed-Fi-ODS
        uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579 # v2
        with:
            repository: Ed-Fi-Alliance-OSS/Ed-Fi-ODS
            path: Ed-Fi-ODS/
      - name: Is pull request branch exists in Ed-Fi-ODS
        working-directory: ./Ed-Fi-ODS-Implementation/
        shell: pwsh
        run: |
          .\build.githubactions.ps1 CheckoutBranch -RelativeRepoPath "../Ed-Fi-ODS"          
      - name: Set StandardVersions
        id: Set_StandardVersions
        working-directory: ./Ed-Fi-ODS-Implementation/
        run: |
          $output = .\build.githubactions.ps1 StandardVersions -ProjectFile "$env:GITHUB_WORKSPACE/Ed-Fi-ODS/Application/EdFi.Ods.Standard/EdFi.Ods.Standard.csproj"
          echo "StandardVersions=$output" >> $env:GITHUB_OUTPUT
          Write-host "StandardVersions is  $output"
        shell: pwsh
      - name: Set ExtensionVersions
        id: Set_ExtensionVersions
        working-directory: ./Ed-Fi-ODS-Implementation/  
        run: |
          $output = .\build.githubactions.ps1 ExtensionVersions -ProjectFile "$env:GITHUB_WORKSPACE/Ed-Fi-Extensions/Extensions/EdFi.Ods.Extensions.TPDM/EdFi.Ods.Extensions.TPDM.csproj"
          echo "ExtensionVersions=$output" >> $env:GITHUB_OUTPUT
          Write-host "ExtensionVersions is  $output"
        shell: pwsh
      
  build:

    runs-on: ubuntu-24.04    
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch' }}
    needs: FindStandardAndExtensionVersions

    strategy:
      fail-fast: false    
      matrix:
        StandardVersion: ${{ fromJson(needs.FindStandardAndExtensionVersions.outputs.StandardVersions) }}
        ExtensionVersion: ${{ fromJson(needs.FindStandardAndExtensionVersions.outputs.ExtensionVersions) }}
    steps:
    - name: Checkout Ed-Fi-ODS-Implementation
      uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608 # v4
      with:
          repository: Ed-Fi-Alliance-OSS/Ed-Fi-ODS-Implementation
          path: Ed-Fi-ODS-Implementation/
    - name: Wait for  ["InitDev, Smoke Tests", "InitDev, Unit tests, Integration tests, Package", "InitDev, MultiTenancy"] workflows to Complete
      uses: ahmadnassri/action-workflow-run-wait@2aa3d9e1a12ecaaa9908e368eaf2123bb084323e #v1.4.4 
      with:
          timeout: ${{inputs.timeout}}
          delay: ${{inputs.delay}}   
    - name: Check for Azure token
      if: ${{ env.REPOSITORY_OWNER == 'Ed-Fi-Alliance-OSS' && env.AZURE_ARTIFACT_NUGET_KEY == '' }}
      run: | 
        echo "::error::Missing Azure Token"
        exit 1

    - name: Download SandboxAdmin,SwaggerUI,WebApi,Databases,EdFi.Ods.Api.Sdk,EdFi.SdkGen NugetPackages
      uses: dawidd6/action-download-artifact@80620a5d27ce0ae443b965134db88467fc607b43  #v7
      with:
        workflow: InitDev, Unit tests, Integration tests, Package.yml
        workflow_conclusion: success
        name: NugetPackages.Artifacts-${{ matrix.StandardVersion }}
        path: ${{ github.workspace }}/Ed-Fi-ODS-Implementation/NugetPackages/
        commit: ${{ env.INITDEV_COMMIT }}
        check_artifacts: true
        if_no_artifact_found: fail

    - name: EdFi.Ods.Api.TestSdk NugetPackage
      uses: dawidd6/action-download-artifact@80620a5d27ce0ae443b965134db88467fc607b43  #v7
      with:
        workflow: InitDev, Smoke Tests.yml
        workflow_conclusion: success
        name: NugetPackages.Artifacts-${{ matrix.StandardVersion }}
        path: ${{ github.workspace }}/Ed-Fi-ODS-Implementation/NugetPackages/
        commit: ${{ env.INITDEV_COMMIT }}
        check_artifacts: true
        if_no_artifact_found: fail

    - name: Install-credential-handler
      if: ${{ env.AZURE_ARTIFACT_NUGET_KEY != '' }}
      working-directory: ./Ed-Fi-ODS-Implementation/      
      run: |      
        .\build.githubactions.ps1 InstallCredentialHandler
      shell: pwsh 
    - name: Publish to Azure Artifacts
      if: ${{ env.AZURE_ARTIFACT_NUGET_KEY != '' }}
      working-directory: ./Ed-Fi-ODS-Implementation/
      run: |
        Get-ChildItem "$env:GITHUB_WORKSPACE/Ed-Fi-ODS-Implementation/NugetPackages/" -Filter *.nupkg | 
        Foreach-Object {
            Write-Host "nupkg full path is " $_.FullName
            $packagePath = $_.FullName
            dotnet nuget push $packagePath --api-key ${{ env.AZURE_ARTIFACT_NUGET_KEY }} --source ${{env.AZURE_ARTIFACT_URL}} --skip-duplicate
        }
      shell: pwsh
