# SPDX-License-Identifier: Apache-2.0
# Licensed to the Ed-Fi Alliance under one or more agreements.
# The Ed-Fi Alliance licenses this file to you under the Apache License, Version 2.0.
# See the LICENSE and NOTICES files in the project root for more information.

name: Publish to Azure Artifacts

on:
  workflow_dispatch:
    inputs:
      timeout:
        description: "Timeout before we stop trying (in milliseconds) for action-workflow-run-wait step"
        required: true
        default: '1800000'
      delay:
        description: "delay between status checks (in milliseconds) for action-workflow-run-wait step"
        required: true
        default: '10000'        
          
  workflow_run:
    workflows: ["InitDev, Smoke Tests", "InitDev, Unit tests, Integration tests, Package", "InitDev, MultiTenancy"]
    types:
      - completed
    branches: [main, 'b-v*-patch*','feature-*']

permissions: read-all

env:
  AZURE_ARTIFACT_URL: "https://pkgs.dev.azure.com/ed-fi-alliance/Ed-Fi-Alliance-OSS/_packaging/EdFi/nuget/v3/index.json"
  AZURE_ARTIFACT_NUGET_KEY: ${{ secrets.AZURE_ARTIFACTS_PERSONAL_ACCESS_TOKEN }}
  VSS_NUGET_EXTERNAL_FEED_ENDPOINTS : '{"endpointCredentials": [{"endpoint": "https://pkgs.dev.azure.com/ed-fi-alliance/Ed-Fi-Alliance-OSS/_packaging/EdFi/nuget/v3/index.json","password": "${{ secrets.AZURE_ARTIFACTS_PERSONAL_ACCESS_TOKEN }}"}]}'
  INITDEV_COMMIT: ${{ github.event.workflow_run.head_sha}}
  REPOSITORY_OWNER: ${{ GITHUB.REPOSITORY_OWNER }}
  EDFI_ODS_TOKEN: ${{ secrets.REPO_DISPATCH_TOKEN }}

jobs:
  FindStandardAndExtensionVersions:
    uses: Ed-Fi-Alliance-OSS/Ed-Fi-ODS/.github/workflows/Find Standard and Extension Versions.yml@874b608a0f3a14243e0035dd1222169fafcbe8d3
    with:
      calling_branch: ${{ github.head_ref || github.ref_name }}
      
  build:

    runs-on: ubuntu-24.04    
    if: ${{ github.event_name == 'workflow_dispatch' }}
    needs: FindStandardAndExtensionVersions

    strategy:
      fail-fast: false    
      matrix:
        StandardVersion: ${{ fromJson(needs.FindStandardAndExtensionVersions.outputs.StandardVersions) }}
        ExtensionVersion: ${{ fromJson(needs.FindStandardAndExtensionVersions.outputs.ExtensionVersions) }}
    steps:
    - name: Checkout Ed-Fi-ODS-Implementation
      uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608 # v4
      with:
          repository: Ed-Fi-Alliance-OSS/Ed-Fi-ODS-Implementation
          path: Ed-Fi-ODS-Implementation/
    - name: Verify dependent workflows are success or not 
      run: |
        $workflowNames = @("InitDev, Smoke Tests.yml", "InitDev Postgres, Unit tests, Integration tests.yml", "InitDev, MultiTenancy.yml")
        $sha = "${{ github.event.workflow_run.head_sha }}"
        Write-Host "sha is $sha"

          Write-Host "Checking workflow statuses..."
          $allSuccess = $true

          foreach ($workflow in $workflowNames) {
            
            $url = "https://api.github.com/repos/Ed-Fi-Alliance-OSS/Ed-Fi-ODS-Implementation/actions/workflows/$workflow/runs?head_sha=$sha"
            $headers = @{
                    Authorization = "Bearer $env:EDFI_ODS_TOKEN"
                    Accept = "application/vnd.github.v3+json"
            }
            
            $response = Invoke-RestMethod -Uri $url -Headers $headers

            if ($response.workflow_runs.Count -eq 0) {
              Write-Host "No runs found for workflow: $workflow"
              $allSuccess = $false
              break
            }

            $latestRun = $response.workflow_runs | Sort-Object -Property created_at -Descending | Select-Object -First 1
            if ($latestRun.conclusion -ne "success") {
              Write-Host "latest Run status is $latestRun.status"
              $allSuccess = $false
              break
            }
          }

          if ($allSuccess) {
            Write-Host "All workflows completed successfully."
            break
          }

        if (-not $allSuccess) {
          Write-Host "one or more workflows failed.So cancelling the build"
          exit 1
        }
      shell: pwsh
    # Adding a step to ensure the build job fails if it was skipped
    - name: Fail the build job if skipped
      if: ${{ needs.FindStandardAndExtensionVersions.result == 'skipped' }}
      run: |
        echo "Build job was skipped due to a failure in the previous job."
        exit 1
      shell: pwsh
    - name: Wait for  ["InitDev, Smoke Tests", "InitDev, Unit tests, Integration tests, Package", "InitDev, MultiTenancy"] workflows to Complete
      uses: ahmadnassri/action-workflow-run-wait@2aa3d9e1a12ecaaa9908e368eaf2123bb084323e #v1.4.4 
      with:
          timeout: ${{inputs.timeout}}
          delay: ${{inputs.delay}}   
    - name: Check for Azure token
      if: ${{ env.REPOSITORY_OWNER == 'Ed-Fi-Alliance-OSS' && env.AZURE_ARTIFACT_NUGET_KEY == '' }}
      run: | 
        echo "::error::Missing Azure Token"
        exit 1

    - name: Download SandboxAdmin,SwaggerUI,WebApi,Databases,EdFi.Ods.Api.Sdk,EdFi.SdkGen NugetPackages
      uses: dawidd6/action-download-artifact@71072fbb1229e1317f1a8de6b04206afb461bd67 #v3.1.2
      with:
        workflow: InitDev, Unit tests, Integration tests, Package.yml
        workflow_conclusion: success
        name: NugetPackages.Artifacts-${{ matrix.StandardVersion }}
        path: ${{ github.workspace }}/Ed-Fi-ODS-Implementation/NugetPackages/
        commit: ${{ env.INITDEV_COMMIT }}
        check_artifacts: true
        if_no_artifact_found: fail

    - name: EdFi.Ods.Api.TestSdk NugetPackage
      uses: dawidd6/action-download-artifact@71072fbb1229e1317f1a8de6b04206afb461bd67 #v3.1.2
      with:
        workflow: InitDev, Smoke Tests.yml
        workflow_conclusion: success
        name: NugetPackages.Artifacts-${{ matrix.StandardVersion }}
        path: ${{ github.workspace }}/Ed-Fi-ODS-Implementation/NugetPackages/
        commit: ${{ env.INITDEV_COMMIT }}
        check_artifacts: true
        if_no_artifact_found: fail

    - name: Install-credential-handler
      if: ${{ env.AZURE_ARTIFACT_NUGET_KEY != '' }}
      working-directory: ./Ed-Fi-ODS-Implementation/      
      run: |      
        .\build.githubactions.ps1 InstallCredentialHandler
      shell: pwsh 
    - name: Publish to Azure Artifacts
      if: ${{ env.AZURE_ARTIFACT_NUGET_KEY != '' }}
      working-directory: ./Ed-Fi-ODS-Implementation/
      run: |
        Get-ChildItem "$env:GITHUB_WORKSPACE/Ed-Fi-ODS-Implementation/NugetPackages/" -Filter *.nupkg | 
        Foreach-Object {
            Write-Host "nupkg full path is " $_.FullName
            $packagePath = $_.FullName
            dotnet nuget push $packagePath --api-key ${{ env.AZURE_ARTIFACT_NUGET_KEY }} --source ${{env.AZURE_ARTIFACT_URL}} --skip-duplicate
        }
      shell: pwsh
