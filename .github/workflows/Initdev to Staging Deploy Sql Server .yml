# SPDX-License-Identifier: Apache-2.0
# Licensed to the Ed-Fi Alliance under one or more agreements.
# The Ed-Fi Alliance licenses this file to you under the Apache License, Version 2.0.
# See the LICENSE and NOTICES files in the project root for more information.

name: Initdev to Staging Deploy Sql Server  Pull request 

on:
  pull_request:
   branches: [main]
  push:
   branches: [main]

env:
  INFORMATIONAL_VERSION: "6.0"
  BUILD_INCREMENTER: "30000"
  CONFIGURATION: "Release"
  VERSION_MAJOR: "6"
  VERSION_MINOR: "0"
  AZURE_ARTIFACT_URL: "https://pkgs.dev.azure.com/ed-fi-alliance/Ed-Fi-Alliance-OSS/_packaging/EdFi/nuget/v3/index.json"
  AZURE_ARTIFACT_NUGET_KEY: ${{ secrets.AZURE_ARTIFACTS_PERSONAL_ACCESS_TOKEN }}
  VSS_NUGET_EXTERNAL_FEED_ENDPOINTS : '{"endpointCredentials": [{"endpoint": "https://pkgs.dev.azure.com/ed-fi-alliance/Ed-Fi-Alliance-OSS/_packaging/EdFi/nuget/v3/index.json","password": "${{ secrets.AZURE_ARTIFACTS_PERSONAL_ACCESS_TOKEN }}"}]}'

jobs:
  build:

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579 # v2
    - name: Setup .NET
      uses: actions/setup-dotnet@c0d4ad69d8bd405d234f1c9166d383b7a4f69ed8 # 2.1.0
      with:
        dotnet-version: 6.0.x
    - name: Support longpaths
      run: git config --system core.longpaths true
    - name: Checkout Ed-Fi-ODS-Implementation
      uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579 # v2
      with:
          repository: Ed-Fi-Alliance-OSS/Ed-Fi-ODS-Implementation
          path: Ed-Fi-ODS-Implementation/
    - name: Is pull request branch exists in Ed-Fi-ODS-Implementation
      working-directory: ./Ed-Fi-ODS-Implementation/
      shell: pwsh
      run: |
            $patternName = 'refs/heads/' +  '${{ env.CURRENT_BRANCH }}'
            $is_pull_request_branch = 'False'
            $is_pull_request_branch = git ls-remote --heads origin ${{ env.CURRENT_BRANCH }} | Select-String -Pattern $patternName -SimpleMatch -Quiet
            if ($is_pull_request_branch -eq $true) {
              git fetch origin ${{ env.CURRENT_BRANCH }}
              git checkout ${{ env.CURRENT_BRANCH }}
            }
    - name: Checkout Ed-Fi-ODS
      uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579 # v2
      with:
          repository: Ed-Fi-Alliance-OSS/Ed-Fi-ODS
          path: Ed-Fi-ODS/
    - name: Is pull request branch exists in Ed-Fi-ODS
      working-directory: ./Ed-Fi-ODS/
      shell: pwsh
      run: |
           $patternName = 'refs/heads/' +  '${{ env.CURRENT_BRANCH }}'
           $is_pull_request_branch = 'False'
           $is_pull_request_branch = git ls-remote --heads origin ${{ env.CURRENT_BRANCH }} | Select-String -Pattern $patternName -SimpleMatch -Quiet
           if ($is_pull_request_branch -eq $true) {
              git fetch origin ${{ env.CURRENT_BRANCH }}
              git checkout ${{ env.CURRENT_BRANCH }}
           }
    - name: Restore NuGet packages
      working-directory: ./Ed-Fi-ODS/Utilities/SdkGen
      run: |
         dotnet restore EdFi.SdkGen.sln
      shell: pwsh
    - name: Build EdFi.SdkGen
      working-directory: ./Ed-Fi-ODS-Implementation/
      run: |
           .\build.githubactions.ps1 build -Configuration ${{ env.CONFIGURATION }} -InformationalVersion ${{ env.INFORMATIONAL_VERSION}} -BuildCounter ${{ github.run_number }} -BuildIncrementer ${{env.BUILD_INCREMENTER}} -Solution "$env:GITHUB_WORKSPACE/Ed-Fi-ODS/Utilities/SdkGen/EdFi.SdkGen.sln"
      shell: pwsh
    - name: Install Sql Server Express
      working-directory: ./Ed-Fi-ODS-Implementation/
      run: |
        choco install sql-server-express -y --params=`"'/IgnorePendingReboot'`" --execution-timeout=$installTimeout
          #Name of your SQL Server Alias
          $AliasName = "."

          #These are the two Registry locations for the SQL Alias 
          $x86 = "HKLM:\Software\Microsoft\MSSQLServer\Client\ConnectTo"
          $x64 = "HKLM:\Software\Wow6432Node\Microsoft\MSSQLServer\Client\ConnectTo"
          
          #if the ConnectTo key doesn't exists, create it.
          if ((test-path -path $x86) -ne $True)
          {
              New-Item $x86
          }
          
          if ((test-path -path $x64) -ne $True)
          {
              New-Item $x64
          }
          
          #Define SQL Alias 
          $NamedPipeAliasName = 'DBNMPNTW,\\.\PIPE\MSSQL$SQLEXPRESS\sql\query'
          
          #Create TCP/IP Aliases
          New-ItemProperty -Path $x86 -Name $AliasName -PropertyType String -Value $NamedPipeAliasName
          New-ItemProperty -Path $x64 -Name $AliasName -PropertyType String -Value $NamedPipeAliasName
          Set-ItemProperty -Path 'HKLM:\SOFTWARE\Microsoft\Microsoft SQL Server\MSSQL15.SQLEXPRESS\MSSQLServer' -Name LoginMode -Value 2 -Force
      shell: pwsh
    - name: Setup Sql Server Connection String
      working-directory: ./Ed-Fi-ODS-Implementation/
      run: |
        $ErrorActionPreference = 'Stop'
        $PSVersionTable
        [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12
           
        # EdFi.Ods.WebApi
        dotnet user-secrets set --id f1506d66-289c-44cb-a2e2-80411cc690ec 'ConnectionStrings:EdFi_Ods'      'Server=(LocalDB)\\MSSQLLocalDB; Database=EdFi_{0}; Connection Timeout=30; Trusted_Connection=True; Application Name=EdFi.Ods.WebApi;'
        dotnet user-secrets set --id f1506d66-289c-44cb-a2e2-80411cc690ec 'ConnectionStrings:EdFi_Admin'    'Server=(LocalDB)\\MSSQLLocalDB; Database=EdFi_Admin; Connection Timeout=30; Trusted_Connection=True; Application Name=EdFi.Ods.WebApi;'
        dotnet user-secrets set --id f1506d66-289c-44cb-a2e2-80411cc690ec 'ConnectionStrings:EdFi_Security' 'Server=(LocalDB)\\MSSQLLocalDB; Database=EdFi_Security; Connection Timeout=30; Trusted_Connection=True; Persist Security Info=True; Application Name=EdFi.Ods.WebApi;'
        dotnet user-secrets set --id f1506d66-289c-44cb-a2e2-80411cc690ec 'ConnectionStrings:EdFi_Master'   'Server=(LocalDB)\\MSSQLLocalDB; Database=master; Connection Timeout=30; Trusted_Connection=True; Application Name=EdFi.Ods.WebApi;'

        # EdFi.Ods.Api.IntegrationTestHarness
        dotnet user-secrets set --id f1506d66-289c-44cb-a2e2-80411cc690ed 'ConnectionStrings:EdFi_Ods'      'Server=(LocalDB)\MSSQLLocalDB; Database=EdFi_Ods_Populated_Template_Test; Connection Timeout=30; Trusted_Connection=True; Application Name=EdFi.Ods.Api.IntegrationTestHarness'
        dotnet user-secrets set --id f1506d66-289c-44cb-a2e2-80411cc690ed 'ConnectionStrings:EdFi_Admin'    'Server=(LocalDB)\MSSQLLocalDB; Database=EdFi_Admin; Connection Timeout=30; Trusted_Connection=True; Application Name=EdFi.Ods.Api.IntegrationTestHarness'
        dotnet user-secrets set --id f1506d66-289c-44cb-a2e2-80411cc690ed 'ConnectionStrings:EdFi_Security' 'Server=(LocalDB)\MSSQLLocalDB; Database=EdFi_Security; Connection Timeout=30; Trusted_Connection=True; Persist Security Info=True; Application Name=EdFi.Ods.Api.IntegrationTestHarness'
        dotnet user-secrets set --id f1506d66-289c-44cb-a2e2-80411cc690ed 'ConnectionStrings:EdFi_Master'   'Server=(LocalDB)\MSSQLLocalDB; Database=master; Connection Timeout=30; Trusted_Connection=True; Application Name=EdFi.Ods.Api.IntegrationTestHarness'
        
        Write-Host "Starting MSSQLLocalDB"
        SQLLocalDB start MSSQLLocalDB

        # EdFi.Ods.WebApi
        dotnet user-secrets set --id f1506d66-289c-44cb-a2e2-80411cc690ec 'Plugin:Folder' '../../Plugin'
        dotnet user-secrets set --id f1506d66-289c-44cb-a2e2-80411cc690ec 'Plugin:Scripts:0' 'tpdm'
        
        # EdFi.Ods.Api.IntegrationTestHarness
        dotnet user-secrets set --id f1506d66-289c-44cb-a2e2-80411cc690ed 'Plugin:Folder' '../../Plugin'
        dotnet user-secrets set --id f1506d66-289c-44cb-a2e2-80411cc690ed 'Plugin:Scripts:0' 'tpdm'
      shell: pwsh
    - name: Start-TestHarness & Run EdFi SdkGen Console Exe to generate C# SDK code & Stop-TestHarness
      working-directory: ./Ed-Fi-ODS-Implementation/
      run: |           
            $ErrorActionPreference = 'Stop'
            $PSVersionTable
            . $env:GITHUB_WORKSPACE/Ed-Fi-ODS-Implementation/Initialize-PowershellForDevelopment.ps1
            initdev -Engine SQLServer -UsePlugins -RepositoryRoot $env:GITHUB_WORKSPACE
            Start-TestHarness -apiUrl "http://localhost:8765" -configurationFile  "$env:GITHUB_WORKSPACE/Ed-Fi-ODS-Implementation/logistics/scripts/modules/postmanTestHarnessConfiguration.json" -environmentFilePath "$env:GITHUB_WORKSPACE/Ed-Fi-ODS-Implementation/logistics/scripts/modules/"
            cmd /c "$env:GITHUB_WORKSPACE/Ed-Fi-ODS/Utilities/SdkGen/EdFi.SdkGen.Console/bin/Release/net6.0/EdFi.SdkGen.Console.exe" -m "http://localhost:8765/metadata?sdk=true" -v "5.4.0" --core-only
            Stop-TestHarness
      shell: pwsh
    - name: Restore NuGet packages for EdFi.OdsApi.Sdk.sln
      working-directory: ./Ed-Fi-ODS/
      run: |
           dotnet restore "$env:GITHUB_WORKSPACE/Ed-Fi-ODS-Implementation/./csharp/EdFi.OdsApi.Sdk.sln"
      shell: pwsh
    - name: Build EdFi.Ods.Api.Sdk Solution
      working-directory: ./Ed-Fi-ODS-Implementation/
      run: |
           .\build.githubactions.ps1 build -Configuration ${{ env.CONFIGURATION }} -InformationalVersion ${{ env.INFORMATIONAL_VERSION}} -BuildCounter ${{ github.run_number }} -BuildIncrementer ${{env.BUILD_INCREMENTER}} -Solution "$env:GITHUB_WORKSPACE/Ed-Fi-ODS-Implementation/./csharp/EdFi.OdsApi.Sdk.sln"
      shell: pwsh
    - name: ODS/API InitDev, Integration Test ,Unit Test, Package
      working-directory: ./Ed-Fi-ODS-Implementation/
      run: |
        $ErrorActionPreference = 'Stop'
        [int]$BuildCounter =  "${{ github.run_number }}"
        [int]$BuildIncrementer = "${{ env.BUILD_INCREMENTER }}"
        [int]$newRevision =  $BuildCounter + $BuildIncrementer
        [string]$version = "${{ env.VERSION_MAJOR}}"+ "." +"${{ env.VERSION_MINOR}}" + "." + $newRevision.ToString()
        .\build.github.ps1 -PackageVersion $version -RepositoryRoot $env:GITHUB_WORKSPACE -UsePlugins -RunSdkGen -RunPostman -NoPackaging -RunPester -RunSmokeTest -RunDotnetTest
      shell: pwsh
    - name: Restore NuGet packages for EdFi.OdsApi.Sdk.sln
      working-directory: ./Ed-Fi-ODS/
      run: |
           dotnet restore "$env:GITHUB_WORKSPACE/Ed-Fi-ODS/Utilities/SdkGen/EdFi.SdkGen.Console/csharp/EdFi.OdsApi.Sdk.sln"
      shell: pwsh
    - name: Build EdFi.Ods.Api.Sdk Solution
      working-directory: ./Ed-Fi-ODS-Implementation/
      run: |
           .\build.githubactions.ps1 build -Configuration ${{ env.CONFIGURATION }} -InformationalVersion ${{ env.INFORMATIONAL_VERSION}} -BuildCounter ${{ github.run_number }} -BuildIncrementer ${{env.BUILD_INCREMENTER}} -Solution "$env:GITHUB_WORKSPACE/Ed-Fi-ODS/Utilities/SdkGen/EdFi.SdkGen.Console/csharp/EdFi.OdsApi.Sdk.sln"
      shell: pwsh
    - name: Build EdFi.LoadTools Solution
      working-directory: ./Ed-Fi-ODS-Implementation/
      run: |
           .\build.githubactions.ps1 build -Configuration ${{ env.CONFIGURATION }} -InformationalVersion ${{ env.INFORMATIONAL_VERSION}} -BuildCounter ${{ github.run_number }} -BuildIncrementer ${{env.BUILD_INCREMENTER}} -Solution "$env:GITHUB_WORKSPACE/Ed-Fi-ODS/Utilities/DataLoading/LoadTools.sln"
      shell: pwsh
    - name: LoadTools Test Execution
      working-directory: ./Ed-Fi-ODS-Implementation/
      run: |
           dotnet test "$env:GITHUB_WORKSPACE/Ed-Fi-ODS/Utilities/DataLoading/LoadTools.sln" --filter TestCategory!~'RunManually'
      shell: pwsh
    - name: ODS/API Smoke Test using Test Harness via run-smoke-tests.ps1
      working-directory: ./Ed-Fi-ODS-Implementation/
      run: |           
           $ErrorActionPreference = 'Stop'
           . $env:GITHUB_WORKSPACE/Ed-Fi-ODS-Implementation/Initialize-PowershellForDevelopment.ps1
           . $env:GITHUB_WORKSPACE/Ed-Fi-ODS-Implementation/logistics/scripts/run-smoke-tests.ps1 -testSets @("NonDestructiveApi", "NonDestructiveSdk")  -smokeTestDll "$env:GITHUB_WORKSPACE/Ed-Fi-ODS/Utilities/SdkGen/EdFi.SdkGen.Console/csharp/src/EdFi.OdsApi.Sdk/bin/Release/net6.0/EdFi.OdsApi.Sdk.dll" -smokeTestExe "$env:GITHUB_WORKSPACE/Ed-Fi-ODS/Utilities/DataLoading/EdFi.SmokeTest.Console/bin/Release/net6.0/EdFi.SmokeTest.Console.dll"
      shell: pwsh
    - name: ODS/API Smoke Test Year-Specific using Test Harness via run-smoke-tests.ps1
      working-directory: ./Ed-Fi-ODS-Implementation/
      run: |           
           $ErrorActionPreference = 'Stop'
           . $env:GITHUB_WORKSPACE/Ed-Fi-ODS-Implementation/Initialize-PowershellForDevelopment.ps1
           initdev -Engine SQLServer -UsePlugins -RepositoryRoot $env:GITHUB_WORKSPACE -InstallType "YearSpecific"
           . $env:GITHUB_WORKSPACE/Ed-Fi-ODS-Implementation/logistics/scripts/run-smoke-tests.ps1 -schoolYear "2022" -testSets @("NonDestructiveApi", "NonDestructiveSdk")  -smokeTestDll "$env:GITHUB_WORKSPACE/Ed-Fi-ODS/Utilities/SdkGen/EdFi.SdkGen.Console/csharp/src/EdFi.OdsApi.Sdk/bin/Release/net6.0/EdFi.OdsApi.Sdk.dll" -smokeTestExe "$env:GITHUB_WORKSPACE/Ed-Fi-ODS/Utilities/DataLoading/EdFi.SmokeTest.Console/bin/Release/net6.0/EdFi.SmokeTest.Console.dll"
      shell: pwsh
    - name: ODS/API Smoke Test Shared Instance using Test Harness via run-smoke-tests.ps1
      working-directory: ./Ed-Fi-ODS-Implementation/
      run: |           
           $ErrorActionPreference = 'Stop'
           . $env:GITHUB_WORKSPACE/Ed-Fi-ODS-Implementation/Initialize-PowershellForDevelopment.ps1
           initdev -Engine SQLServer -UsePlugins -RepositoryRoot $env:GITHUB_WORKSPACE -InstallType "SharedInstance"
           . $env:GITHUB_WORKSPACE/Ed-Fi-ODS-Implementation/logistics/scripts/run-smoke-tests.ps1 -schoolYear "2022" -testSets @("NonDestructiveApi", "NonDestructiveSdk")  -smokeTestDll "$env:GITHUB_WORKSPACE/Ed-Fi-ODS/Utilities/SdkGen/EdFi.SdkGen.Console/csharp/src/EdFi.OdsApi.Sdk/bin/Release/net6.0/EdFi.OdsApi.Sdk.dll" -smokeTestExe "$env:GITHUB_WORKSPACE/Ed-Fi-ODS/Utilities/DataLoading/EdFi.SmokeTest.Console/bin/Release/net6.0/EdFi.SmokeTest.Console.dll"
      shell: pwsh
    - name: Create EdF.Ods.WebApi.Prerelease for Staging
      working-directory: ./Ed-Fi-ODS-Implementation/
      run: |
        $ErrorActionPreference = 'Stop'
        . $env:GITHUB_WORKSPACE/Ed-Fi-ODS-Implementation/Initialize-PowershellForDevelopment.ps1
        $params = @{
                ProjectPath           = $env:GITHUB_WORKSPACE + '/Ed-Fi-ODS-Implementation/Application/EdFi.Ods.WebApi'
                PackageDefinitionFile = $env:GITHUB_WORKSPACE + '/Ed-Fi-ODS-Implementation/Application/EdFi.Ods.WebApi/bin/**/**/publish/EdFi.Ods.WebApi.Prerelease.nuspec'
                PackageId             = 'EdFi.Suite3.Ods.WebApi.Prerelease'
                Version               = '${{ env.VERSION_MAJOR}}.${{ env.VERSION_MINOR}}. ${{ github.run_number }}'
                Properties            = (Get-DefaultNuGetProperties)
                OutputDirectory       = $env:GITHUB_WORKSPACE + '/Ed-Fi-ODS-Implementation/packages'
        }
        New-WebPackage @params
        Write-Host "publishArtifacts 'Ed-Fi-ODS-Implementation/packages'"
      shell: pwsh