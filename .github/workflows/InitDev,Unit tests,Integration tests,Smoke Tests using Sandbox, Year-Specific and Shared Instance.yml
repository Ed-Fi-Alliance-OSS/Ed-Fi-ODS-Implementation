# SPDX-License-Identifier: Apache-2.0
# Licensed to the Ed-Fi Alliance under one or more agreements.
# The Ed-Fi Alliance licenses this file to you under the Apache License, Version 2.0.
# See the LICENSE and NOTICES files in the project root for more information.

name: InitDev,Unit tests,Integration tests,Smoke Tests using Sandbox, Year-Specific and Shared Instance Push Main

on:
  pull_request:
   branches: [main]
  push:
   branches: [main]

env:
  INFORMATIONAL_VERSION: "6.0"
  BUILD_INCREMENTER: "40000"
  CONFIGURATION: "Release"
  VERSION_MAJOR: "6"
  VERSION_MINOR: "0"
  AZURE_ARTIFACT_URL: "https://pkgs.dev.azure.com/ed-fi-alliance/Ed-Fi-Alliance-OSS/_packaging/EdFi/nuget/v3/index.json"
  AZURE_ARTIFACT_NUGET_KEY: ${{ secrets.AZURE_ARTIFACTS_PERSONAL_ACCESS_TOKEN }}
  VSS_NUGET_EXTERNAL_FEED_ENDPOINTS : '{"endpointCredentials": [{"endpoint": "https://pkgs.dev.azure.com/ed-fi-alliance/Ed-Fi-Alliance-OSS/_packaging/EdFi/nuget/v3/index.json","password": "${{ secrets.AZURE_ARTIFACTS_PERSONAL_ACCESS_TOKEN }}"}]}'
  CURRENT_BRANCH: ${{ GITHUB.HEAD_REF }}

jobs:
  build:

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579 # v2
    - name: Setup .NET
      uses: actions/setup-dotnet@c0d4ad69d8bd405d234f1c9166d383b7a4f69ed8 # 2.1.0
      with:
        dotnet-version: 6.0.x
    - name: Support longpaths
      run: git config --system core.longpaths true
    - name: Checkout Ed-Fi-ODS-Implementation
      uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579 # v2
      with:
          repository: Ed-Fi-Alliance-OSS/Ed-Fi-ODS-Implementation
          path: Ed-Fi-ODS-Implementation/
    - name: Is pull request branch exists in Ed-Fi-ODS-Implementation
      working-directory: ./Ed-Fi-ODS-Implementation/
      shell: pwsh
      run: |
            $patternName = 'refs/heads/' +  '${{ env.CURRENT_BRANCH }}'
            $is_pull_request_branch = 'False'
            $is_pull_request_branch = git ls-remote --heads origin ${{ env.CURRENT_BRANCH }} | Select-String -Pattern $patternName -SimpleMatch -Quiet
            if ($is_pull_request_branch -eq $true) {
              git fetch origin ${{ env.CURRENT_BRANCH }}
              git checkout ${{ env.CURRENT_BRANCH }}
            }
    - name: Checkout Ed-Fi-ODS
      uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579 # v2
      with:
          repository: Ed-Fi-Alliance-OSS/Ed-Fi-ODS
          path: Ed-Fi-ODS/
    - name: Is pull request branch exists in Ed-Fi-ODS
      working-directory: ./Ed-Fi-ODS/
      shell: pwsh
      run: |
           $patternName = 'refs/heads/' +  '${{ env.CURRENT_BRANCH }}'
           Write-Host "Pattern Name is " $patternName -fore GREEN
           $is_pull_request_branch = 'False'
           $is_pull_request_branch = git ls-remote --heads origin ${{ env.CURRENT_BRANCH }} | Select-String -Pattern $patternName -SimpleMatch -Quiet
           Write-Host "pull request branch is '$($is_pull_request_branch -eq $true)'" -fore GREEN
           if ($is_pull_request_branch -eq $true) {
              Write-Host "pull request branch " + ${{ env.CURRENT_BRANCH }} + "exists" -fore GREEN
              git fetch origin ${{ env.CURRENT_BRANCH }}
              git checkout ${{ env.CURRENT_BRANCH }}
           }
    - name: Restore NuGet packages
      working-directory: ./Ed-Fi-ODS/Utilities/SdkGen
      run: |
         dotnet restore EdFi.SdkGen.sln
         Write-Host  "GITHUB_WORKSPACE" $env:GITHUB_WORKSPACE
      shell: pwsh
    - name: Build EdFi.SdkGen
      working-directory: ./Ed-Fi-ODS-Implementation/
      run: |
           .\build.githubactions.ps1 build -Configuration ${{ env.CONFIGURATION }} -InformationalVersion ${{ env.INFORMATIONAL_VERSION}} -BuildCounter ${{ github.run_number }} -BuildIncrementer ${{env.BUILD_INCREMENTER}} -Solution "$env:GITHUB_WORKSPACE/Ed-Fi-ODS/Utilities/SdkGen/EdFi.SdkGen.sln"
      shell: pwsh
    - name: Pack EdFi.SdkGen Nuget
      working-directory: ./Ed-Fi-ODS-Implementation/
      run: |
        [int]$BuildCounter =  "${{ github.run_number }}"
        [int]$BuildIncrementer = "${{ env.BUILD_INCREMENTER }}"        
        $newRevision = ($BuildCounter) + ($BuildIncrementer)
        $InformationalVersion = ${{ env.INFORMATIONAL_VERSION }}
        $version = "${{ env.INFORMATIONAL_VERSION }}" + "."+ "$newRevision"
        $packageOutput = "$env:GITHUB_WORKSPACE\Ed-Fi-ODS-Implementation\NugetPackages"
        Write-Host  "version" $version
        Write-Host  "newRevision" $newRevision
        Write-Host  "InformationalVersion" $InformationalVersion         
        dotnet pack "$env:GITHUB_WORKSPACE/Ed-Fi-ODS/Utilities/SdkGen/EdFi.SdkGen.sln" -c  ${{ env.CONFIGURATION }}  --output $packageOutput --no-build --verbosity normal -p:VersionPrefix=$version -p:NoWarn=NU5123 -p:PackageId="EdFi.SdkGen"
      shell: pwsh
    - name: Install-credential-handler
      run: iex "& { $(irm https://aka.ms/install-artifacts-credprovider.ps1) } -AddNetfx"
      shell: pwsh
    - name: Publish EdFi.SdkGen nuget package
      working-directory: ./Ed-Fi-ODS-Implementation/
      run: |
        .\build.githubactions.ps1 publish -InformationalVersion ${{ env.INFORMATIONAL_VERSION }} -BuildCounter ${{ github.run_number }} -BuildIncrementer ${{env.BUILD_INCREMENTER}} -NuGetApiKey ${{ env.AZURE_ARTIFACT_NUGET_KEY }} -EdFiNuGetFeed ${{env.AZURE_ARTIFACT_URL}} -PackageName  "EdFi.SdkGen"
        mkdir net6.0
      shell: pwsh
    - name: Upload EdFi.SdkGen Artifacts
      if: success()
      uses: actions/upload-artifact@6673cd052c4cd6fcf4b4e6e60ea986c889389535 # v3.0.0
      with:
        name: EdFi.SdkGen.Artifacts
        path: ${{ github.workspace }}/Ed-Fi-ODS/Utilities/SdkGen/EdFi.SdkGen.Console/bin/Release/
    - name: Setup Sql Server Connection String
      working-directory: ./Ed-Fi-ODS-Implementation/
      run: |
        $ErrorActionPreference = 'Stop'
        $PSVersionTable
        [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12
           
        # EdFi.Ods.WebApi
        dotnet user-secrets set --id f1506d66-289c-44cb-a2e2-80411cc690ec 'ConnectionStrings:EdFi_Ods'      'Server=(LocalDB)\\MSSQLLocalDB; Database=EdFi_{0}; Connection Timeout=30; Trusted_Connection=True; Application Name=EdFi.Ods.WebApi;'
        dotnet user-secrets set --id f1506d66-289c-44cb-a2e2-80411cc690ec 'ConnectionStrings:EdFi_Admin'    'Server=(LocalDB)\\MSSQLLocalDB; Database=EdFi_Admin; Connection Timeout=30; Trusted_Connection=True; Application Name=EdFi.Ods.WebApi;'
        dotnet user-secrets set --id f1506d66-289c-44cb-a2e2-80411cc690ec 'ConnectionStrings:EdFi_Security' 'Server=(LocalDB)\\MSSQLLocalDB; Database=EdFi_Security; Connection Timeout=30; Trusted_Connection=True; Persist Security Info=True; Application Name=EdFi.Ods.WebApi;'
        dotnet user-secrets set --id f1506d66-289c-44cb-a2e2-80411cc690ec 'ConnectionStrings:EdFi_Master'   'Server=(LocalDB)\\MSSQLLocalDB; Database=master; Connection Timeout=30; Trusted_Connection=True; Application Name=EdFi.Ods.WebApi;'

        # EdFi.Ods.Api.IntegrationTestHarness
        dotnet user-secrets set --id f1506d66-289c-44cb-a2e2-80411cc690ed 'ConnectionStrings:EdFi_Ods'      'Server=(LocalDB)\MSSQLLocalDB; Database=EdFi_Ods_Populated_Template_Test; Connection Timeout=30; Trusted_Connection=True; Application Name=EdFi.Ods.Api.IntegrationTestHarness'
        dotnet user-secrets set --id f1506d66-289c-44cb-a2e2-80411cc690ed 'ConnectionStrings:EdFi_Admin'    'Server=(LocalDB)\MSSQLLocalDB; Database=EdFi_Admin; Connection Timeout=30; Trusted_Connection=True; Application Name=EdFi.Ods.Api.IntegrationTestHarness'
        dotnet user-secrets set --id f1506d66-289c-44cb-a2e2-80411cc690ed 'ConnectionStrings:EdFi_Security' 'Server=(LocalDB)\MSSQLLocalDB; Database=EdFi_Security; Connection Timeout=30; Trusted_Connection=True; Persist Security Info=True; Application Name=EdFi.Ods.Api.IntegrationTestHarness'
        dotnet user-secrets set --id f1506d66-289c-44cb-a2e2-80411cc690ed 'ConnectionStrings:EdFi_Master'   'Server=(LocalDB)\MSSQLLocalDB; Database=master; Connection Timeout=30; Trusted_Connection=True; Application Name=EdFi.Ods.Api.IntegrationTestHarness'
        
        Write-Host "Starting MSSQLLocalDB"
        SQLLocalDB start MSSQLLocalDB

        # EdFi.Ods.WebApi
        dotnet user-secrets set --id f1506d66-289c-44cb-a2e2-80411cc690ec 'Plugin:Folder' '../../Plugin'
        dotnet user-secrets set --id f1506d66-289c-44cb-a2e2-80411cc690ec 'Plugin:Scripts:0' 'tpdm'
        
        # EdFi.Ods.Api.IntegrationTestHarness
        dotnet user-secrets set --id f1506d66-289c-44cb-a2e2-80411cc690ed 'Plugin:Folder' '../../Plugin'
        dotnet user-secrets set --id f1506d66-289c-44cb-a2e2-80411cc690ed 'Plugin:Scripts:0' 'tpdm'
      shell: pwsh
    - name: Download EdFi.SdkGen Artifacts
      uses: actions/download-artifact@fb598a63ae348fa914e94cd0ff38f362e927b741 #v3.0.0
      with:
        name: EdFi.SdkGen.Artifacts
        path: ${{ github.workspace }}/Ed-Fi-ODS-Implementation/
    - name: Run EdFi SdkGen Console Exe to generate C# SDK code
      working-directory: ./Ed-Fi-ODS-Implementation/net6.0/
      run: |           
            $ErrorActionPreference = 'Stop'
            $PSVersionTable
           
            . $env:GITHUB_WORKSPACE/Ed-Fi-ODS-Implementation/Initialize-PowershellForDevelopment.ps1
            initdev -Engine SQLServer -UsePlugins -RepositoryRoot $env:GITHUB_WORKSPACE
            Start-TestHarness -apiUrl "http://localhost:8765" -configurationFile  "$env:GITHUB_WORKSPACE/Ed-Fi-ODS-Implementation/logistics/scripts/modules/postmanTestHarnessConfiguration.json" -environmentFilePath "$env:GITHUB_WORKSPACE/Ed-Fi-ODS-Implementation/logistics/scripts/modules/"
            cmd /c "$env:GITHUB_WORKSPACE/Ed-Fi-ODS/Utilities/SdkGen/EdFi.SdkGen.Console/bin/Release/net6.0/EdFi.SdkGen.Console.exe" -m "http://localhost:8765/metadata?sdk=true" -v "5.4.0" --core-only
            Stop-TestHarness
      shell: pwsh
    - name: Restore NuGet packages for EdFi.OdsApi.Sdk.sln
      working-directory: ./Ed-Fi-ODS/
      run: |
           dotnet restore "$env:GITHUB_WORKSPACE/Ed-Fi-ODS-Implementation/net6.0/csharp/EdFi.OdsApi.Sdk.sln"
      shell: pwsh
    - name: Build EdFi.Ods.Api.Sdk Solution
      working-directory: ./Ed-Fi-ODS-Implementation/
      run: |
           .\build.githubactions.ps1 build -Configuration ${{ env.CONFIGURATION }} -InformationalVersion ${{ env.INFORMATIONAL_VERSION}} -BuildCounter ${{ github.run_number }} -BuildIncrementer ${{env.BUILD_INCREMENTER}} -Solution "$env:GITHUB_WORKSPACE/Ed-Fi-ODS-Implementation/net6.0/csharp/EdFi.OdsApi.Sdk.sln"
      shell: pwsh
    - name: Replace PackageId & PackageTitle for EdFi.Ods.Api.Sdk
      working-directory: ./Ed-Fi-ODS-Implementation/
      run: |
           (Get-Content -path "$env:GITHUB_WORKSPACE/Ed-Fi-ODS-Implementation/net6.0/EdFi.OdsApi.Sdk.nuspec" -Raw) | ForEach-Object {
           $_.replace('<id>EdFi.OdsApi.Sdk</id>','<id>EdFi.Suite3.OdsApi.Sdk</id>').replace('<title>EdFi.OdsApi.Sdk</title>','<title>EdFi.Suite3.OdsApi.Sdk</title>')
           } | Set-Content -Path $env:GITHUB_WORKSPACE/Ed-Fi-ODS-Implementation/net6.0/EdFi.OdsApi.Sdk.nuspec
           Write-Host "Updating package id to EdFi.Suite3.OdsApi.Sdk"
      shell: pwsh      
    - name: Use NuGet
      uses: nuget/setup-nuget@b2bc17b761a1d88cab755a776c7922eb26eefbfa # v1
      with:
        nuget-version: '5.x'
    - name: EdFi.Ods.Api.Sdk Pack
      working-directory: ./Ed-Fi-ODS-Implementation
      shell: pwsh
      run: |
            [int]$BuildCounter =  "${{ github.run_number }}"
            [int]$BuildIncrementer = "${{ env.BUILD_INCREMENTER }}"
            [int]$newRevision =  $BuildCounter + $BuildIncrementer
            [string]$version = "${{env.INFORMATIONAL_VERSION}}"+ "." + $newRevision.ToString()
            $packageOutput = "$env:GITHUB_WORKSPACE/Ed-Fi-ODS-Implementation/NugetPackages"
            $NuspecFilePath = "$env:GITHUB_WORKSPACE/Ed-Fi-ODS-Implementation/net6.0/EdFi.OdsApi.Sdk.nuspec"
            nuget pack $NuspecFilePath -OutputDirectory $packageOutput -Version $version -Properties "configuration=release" -Properties "authors=Ed-Fi Alliance" -Properties "owners=Ed-Fi Alliance" -Properties "copyright=Copyright ©Ed-Fi Alliance, LLC. 2020" -NoPackageAnalysis -NoDefaultExcludes
    - name: Install-credential-handler
      run: iex "& { $(irm https://aka.ms/install-artifacts-credprovider.ps1) } -AddNetfx"
      shell: pwsh
    - name: Publish EdFi.Ods.Api.Sdk nuget package
      working-directory: ./Ed-Fi-ODS-Implementation/
      run: |
        .\build.githubactions.ps1 publish -InformationalVersion ${{ env.INFORMATIONAL_VERSION }} -BuildCounter ${{ github.run_number }} -BuildIncrementer ${{env.BUILD_INCREMENTER}} -NuGetApiKey ${{ env.AZURE_ARTIFACT_NUGET_KEY }} -EdFiNuGetFeed ${{env.AZURE_ARTIFACT_URL}} -PackageName  "EdFi.Suite3.OdsApi.Sdk"
      shell: pwsh
    - name: ODS/API InitDev, Integration Test ,Unit Test, Package
      working-directory: ./Ed-Fi-ODS-Implementation/
      run: |
        $ErrorActionPreference = 'Stop'
        [int]$BuildCounter =  "${{ github.run_number }}"
        [int]$BuildIncrementer = "${{ env.BUILD_INCREMENTER }}"
        [int]$newRevision =  $BuildCounter + $BuildIncrementer
        [string]$version = "${{ env.VERSION_MAJOR}}"+ "." +"${{ env.VERSION_MINOR}}" + "." + $newRevision.ToString()
        .\build.github.ps1 -PackageVersion $version -RepositoryRoot $env:GITHUB_WORKSPACE -UsePlugins -RunSdkGen  -PackageOutput "$env:GITHUB_WORKSPACE/Ed-Fi-ODS-Implementation/NugetPackages"
        # .\build.github.ps1 -PackageVersion $version -RepositoryRoot $env:GITHUB_WORKSPACE -UsePlugins -RunSdkGen -RunPostman -RunPester -RunSmokeTest -RunDotnetTest -PackageOutput "$env:GITHUB_WORKSPACE/Ed-Fi-ODS-Implementation/NugetPackages"
      shell: pwsh
    - name: Create EdF.Ods.WebApi.Prerelease for Staging
      working-directory: ./Ed-Fi-ODS-Implementation/
      run: |
        $ErrorActionPreference = 'Stop'
        . $env:GITHUB_WORKSPACE/Ed-Fi-ODS-Implementation/Initialize-PowershellForDevelopment.ps1
        $params = @{
                ProjectPath           = $env:GITHUB_WORKSPACE + '/Ed-Fi-ODS-Implementation/Application/EdFi.Ods.WebApi'
                PackageDefinitionFile = $env:GITHUB_WORKSPACE + '/Ed-Fi-ODS-Implementation/Application/EdFi.Ods.WebApi/bin/**/**/publish/EdFi.Ods.WebApi.Prerelease.nuspec'
                PackageId             = 'EdFi.Suite3.Ods.WebApi.Prerelease'
                Version               = '${{ env.VERSION_MAJOR}}.${{ env.VERSION_MINOR}}. ${{ github.run_number }}'
                Properties            = (Get-DefaultNuGetProperties)
                OutputDirectory       = $env:GITHUB_WORKSPACE + '/Ed-Fi-ODS-Implementation/packages'
        }
        New-WebPackage @params
      shell: pwsh
    - name: build.teamcity.ps1 for EdFi.Ods.Api.TestSdk
      working-directory: ./Ed-Fi-ODS-Implementation/
      run: |
        $ErrorActionPreference = 'Stop'
        [int]$BuildCounter =  "${{ github.run_number }}"
        [int]$BuildIncrementer = "${{ env.BUILD_INCREMENTER }}"
        [int]$newRevision =  $BuildCounter + $BuildIncrementer
        [string]$version = "${{ env.VERSION_MAJOR}}"+ "." +"${{ env.VERSION_MINOR}}" + "." + $newRevision.ToString()
        .\build.github.ps1 -PackageVersion $version -RepositoryRoot $env:GITHUB_WORKSPACE -UsePlugins -RunSdkGen -NoPackaging
      shell: pwsh
    - name: Restore NuGet packages for EdFi.Ods.Api.TestSdk
      working-directory: ./Ed-Fi-ODS/
      run: |            
           dotnet restore "$env:GITHUB_WORKSPACE/Ed-Fi-ODS/Utilities/SdkGen/EdFi.SdkGen.Console/csharp/EdFi.OdsApi.Sdk.sln"
      shell: pwsh
    - name: Build EdFi.Ods.Api.TestSdk Solution
      working-directory: ./Ed-Fi-ODS-Implementation/
      run: |
           .\build.githubactions.ps1 build -Configuration ${{ env.CONFIGURATION }} -InformationalVersion ${{ env.INFORMATIONAL_VERSION}} -BuildCounter ${{ github.run_number }} -BuildIncrementer ${{env.BUILD_INCREMENTER}} -Solution "$env:GITHUB_WORKSPACE/Ed-Fi-ODS/Utilities/SdkGen/EdFi.SdkGen.Console/csharp/EdFi.OdsApi.Sdk.sln"
      shell: pwsh
    - name: Replace PackageId & PackageTitle for EdFi.Ods.Api.TestSdk
      working-directory: ./Ed-Fi-ODS-Implementation/
      run: |
           (Get-Content -path "$env:GITHUB_WORKSPACE/Ed-Fi-ODS-Implementation/net6.0/EdFi.OdsApi.Sdk.nuspec" -Raw) | ForEach-Object {
           $_.replace('<id>EdFi.Suite3.OdsApi.Sdk</id>','<id>EdFi.Suite3.OdsApi.TestSdk</id>').replace('<title>EdFi.Suite3.OdsApi.Sdk</title>','<title>EdFi.Suite3.OdsApi.TestSdk</title>')
           } | Set-Content -Path $env:GITHUB_WORKSPACE/Ed-Fi-ODS-Implementation/net6.0/EdFi.OdsApi.Sdk.nuspec
           Write-Host "Updating package id to EdFi.Suite3.OdsApi.TestSdk"
      shell: pwsh
    - name: EdFi.Ods.Api.TestSdk Pack
      working-directory: ./Ed-Fi-ODS-Implementation
      shell: pwsh
      run: |
            [int]$BuildCounter =  "${{ github.run_number }}"
            [int]$BuildIncrementer = "${{ env.BUILD_INCREMENTER }}"
            [int]$newRevision =  $BuildCounter + $BuildIncrementer
            [string]$version = "${{env.INFORMATIONAL_VERSION}}"+ "." + $newRevision.ToString()
            $packageOutput = "$env:GITHUB_WORKSPACE/Ed-Fi-ODS-Implementation/NugetPackages"
            $NuspecFilePath = "$env:GITHUB_WORKSPACE/Ed-Fi-ODS-Implementation/net6.0/EdFi.OdsApi.Sdk.nuspec"
            nuget pack $NuspecFilePath -OutputDirectory $packageOutput -Version $version -Properties "configuration=release" -Properties "authors=Ed-Fi Alliance" -Properties "owners=Ed-Fi Alliance" -Properties "copyright=Copyright ©Ed-Fi Alliance, LLC. 2020" -NoPackageAnalysis -NoDefaultExcludes
    - name: Install-credential-handler
      run: iex "& { $(irm https://aka.ms/install-artifacts-credprovider.ps1) } -AddNetfx"
      shell: pwsh
    - name: Publish EdFi.Ods.Api.TestSdk nuget package
      working-directory: ./Ed-Fi-ODS-Implementation/
      run: |
        .\build.githubactions.ps1 publish -InformationalVersion ${{ env.INFORMATIONAL_VERSION }} -BuildCounter ${{ github.run_number }} -BuildIncrementer ${{env.BUILD_INCREMENTER}} -NuGetApiKey ${{ env.AZURE_ARTIFACT_NUGET_KEY }} -EdFiNuGetFeed ${{env.AZURE_ARTIFACT_URL}} -PackageName  "EdFi.Suite3.OdsApi.TestSdk"
      shell: pwsh
    - name: Extract EdFi.Suite3.OdsApi.TestSdk nupkg
      working-directory: ./Ed-Fi-ODS-Implementation/
      run: |          
           Rename-Item -Path $env:GITHUB_WORKSPACE/Ed-Fi-ODS-Implementation/NugetPackages/EdFi.Suite3.OdsApi.TestSdk*.nupkg -NewName $env:GITHUB_WORKSPACE/Ed-Fi-ODS-Implementation/EdFi.Suite3.OdsApi.TestSdk.zip
           Expand-Archive -Path $env:GITHUB_WORKSPACE/Ed-Fi-ODS-Implementation/EdFi.Suite3.OdsApi.TestSdk.zip -DestinationPath $env:GITHUB_WORKSPACE/Ed-Fi-ODS-Implementation/EdFi.Suite3.OdsApi.TestSdk/
           Get-ChildItem -Path "$env:GITHUB_WORKSPACE/Ed-Fi-ODS-Implementation/EdFi.Suite3.OdsApi.TestSdk/"
      shell: pwsh        
    - name: Extract EdFi.Suite3.RestApi.Databases nupkg
      working-directory: ./Ed-Fi-ODS-Implementation/
      run: |
           Get-ChildItem -Path "$env:GITHUB_WORKSPACE/Ed-Fi-ODS-Implementation/"          
           Rename-Item -Path $env:GITHUB_WORKSPACE/Ed-Fi-ODS-Implementation/NugetPackages/EdFi.Suite3.RestApi.Databases.*.nupkg -NewName $env:GITHUB_WORKSPACE/Ed-Fi-ODS-Implementation/EdFi.Suite3.RestApi.Databases.zip
           Expand-Archive -Path $env:GITHUB_WORKSPACE/Ed-Fi-ODS-Implementation/EdFi.Suite3.RestApi.Databases.zip -DestinationPath $env:GITHUB_WORKSPACE/Ed-Fi-ODS-Implementation/EdFi.Suite3.RestApi.Databases/
           Get-ChildItem -Path "$env:GITHUB_WORKSPACE/Ed-Fi-ODS-Implementation/EdFi.Suite3.RestApi.Databases/"
      shell: pwsh        
    - name: Build EdFi.LoadTools Solution for Smoke Test Sandbox
      working-directory: ./Ed-Fi-ODS-Implementation/
      run: |          
        .\build.githubactions.ps1 build -Configuration ${{ env.CONFIGURATION }} -InformationalVersion ${{ env.INFORMATIONAL_VERSION}} -BuildCounter ${{ github.run_number }} -BuildIncrementer ${{env.BUILD_INCREMENTER}} -Solution "$env:GITHUB_WORKSPACE/Ed-Fi-ODS/Utilities/DataLoading/LoadTools.sln"
      shell: pwsh
    - name: LoadTools Test Execution for Smoke Test Sandbox
      working-directory: ./Ed-Fi-ODS-Implementation/
      run: |
           dotnet test "$env:GITHUB_WORKSPACE/Ed-Fi-ODS/Utilities/DataLoading/LoadTools.sln" --filter TestCategory!~'RunManually'
      shell: pwsh
    - name: EdFi.Suite3.SmokeTest.Console Pack for Smoke Test Sandbox
      working-directory: ./Ed-Fi-ODS-Implementation/
      run: |
        .\build.githubactions.ps1 pack -InformationalVersion ${{ env.INFORMATIONAL_VERSION }} -BuildCounter ${{ github.run_number }} -BuildIncrementer ${{env.BUILD_INCREMENTER}}  -ProjectFile "$env:GITHUB_WORKSPACE/Ed-Fi-ODS/Utilities/DataLoading/EdFi.SmokeTest.Console/EdFi.SmokeTest.Console.csproj" -PackageName  "EdFi.Suite3.SmokeTest.Console"
      shell: pwsh
    - name: ODS/API Smoke Test for Sandbox
      working-directory: ./Ed-Fi-ODS-Implementation/
      run: |           
           $ErrorActionPreference = 'Stop'
           . $env:GITHUB_WORKSPACE/Ed-Fi-ODS-Implementation/Initialize-PowershellForDevelopment.ps1
           . $env:GITHUB_WORKSPACE/Ed-Fi-ODS-Implementation/logistics/scripts/run-smoke-tests.ps1 -testSets @("NonDestructiveApi", "NonDestructiveSdk")  -smokeTestDll "$env:GITHUB_WORKSPACE/Ed-Fi-ODS-Implementation/EdFi.Suite3.OdsApi.TestSdk/lib/net6.0/EdFi.OdsApi.Sdk.dll" -smokeTestExe "$env:GITHUB_WORKSPACE/Ed-Fi-ODS/Utilities/DataLoading/EdFi.SmokeTest.Console/bin/Release/net6.0/EdFi.SmokeTest.Console.dll" -buildConfiguration "Release"
      shell: pwsh
    - name: Extract EdFi.Suite3.OdsApi.TestSdk nupkg
      working-directory: ./Ed-Fi-ODS-Implementation/
      run: |     
           Rename-Item -Path $env:GITHUB_WORKSPACE/Ed-Fi-ODS-Implementation/NugetPackages/EdFi.Suite3.OdsApi.Sdk*.nupkg -NewName $env:GITHUB_WORKSPACE/Ed-Fi-ODS-Implementation/EdFi.Suite3.OdsApi.Sdk.zip
           Expand-Archive -Path $env:GITHUB_WORKSPACE/Ed-Fi-ODS-Implementation/EdFi.Suite3.OdsApi.Sdk.zip -DestinationPath $env:GITHUB_WORKSPACE/Ed-Fi-ODS-Implementation/EdFi.Suite3.OdsApi.Sdk/
           Get-ChildItem -Path "$env:GITHUB_WORKSPACE/Ed-Fi-ODS-Implementation/EdFi.Suite3.OdsApi.Sdk/"
      shell: pwsh
    - name: Build EdFi.LoadTools Solution for Smoke Test YearSpecific
      working-directory: ./Ed-Fi-ODS-Implementation/
      run: |
        .\build.githubactions.ps1 build -Configuration ${{ env.CONFIGURATION }} -InformationalVersion ${{ env.INFORMATIONAL_VERSION}} -BuildCounter ${{ github.run_number }} -BuildIncrementer ${{env.BUILD_INCREMENTER}} -Solution "$env:GITHUB_WORKSPACE/Ed-Fi-ODS/Utilities/DataLoading/LoadTools.sln"
      shell: pwsh
    - name: LoadTools Test Execution for Smoke Test YearSpecific
      working-directory: ./Ed-Fi-ODS-Implementation/
      run: |
           dotnet test "$env:GITHUB_WORKSPACE/Ed-Fi-ODS/Utilities/DataLoading/LoadTools.sln" --filter TestCategory!~'RunManually'
      shell: pwsh
    - name: EdFi.Suite3.SmokeTest.Console Pack for Smoke Test YearSpecific
      working-directory: ./Ed-Fi-ODS-Implementation/
      run: |
        .\build.githubactions.ps1 pack -InformationalVersion ${{ env.INFORMATIONAL_VERSION }} -BuildCounter ${{ github.run_number }} -BuildIncrementer ${{env.BUILD_INCREMENTER}}  -ProjectFile "$env:GITHUB_WORKSPACE/Ed-Fi-ODS/Utilities/DataLoading/EdFi.SmokeTest.Console/EdFi.SmokeTest.Console.csproj" -PackageName  "EdFi.Suite3.SmokeTest.Console"
      shell: pwsh
    - name: ODS/API Smoke Test for YearSpecific
      working-directory: ./Ed-Fi-ODS-Implementation/
      run: |           
           $ErrorActionPreference = 'Stop'
           . $env:GITHUB_WORKSPACE/Ed-Fi-ODS-Implementation/Initialize-PowershellForDevelopment.ps1
           initdev -Engine SQLServer -UsePlugins -RepositoryRoot $env:GITHUB_WORKSPACE -InstallType "YearSpecific"           
           . $env:GITHUB_WORKSPACE/Ed-Fi-ODS-Implementation/logistics/scripts/run-smoke-tests.ps1  -schoolYear "2022" -testSets @("NonDestructiveApi", "NonDestructiveSdk")  -smokeTestDll "$env:GITHUB_WORKSPACE/Ed-Fi-ODS-Implementation/EdFi.Suite3.OdsApi.Sdk/lib/net6.0/EdFi.OdsApi.Sdk.dll" -smokeTestExe "$env:GITHUB_WORKSPACE/Ed-Fi-ODS/Utilities/DataLoading/EdFi.SmokeTest.Console/bin/Release/net6.0/EdFi.SmokeTest.Console.dll" -noRebuild  -buildConfiguration "Release"      shell: pwsh
    - name: ODS/API Smoke Test for Shared Instance
      working-directory: ./Ed-Fi-ODS-Implementation/
      run: |           
           $ErrorActionPreference = 'Stop'
           . $env:GITHUB_WORKSPACE/Ed-Fi-ODS-Implementation/Initialize-PowershellForDevelopment.ps1
           initdev -Engine SQLServer -UsePlugins -RepositoryRoot $env:GITHUB_WORKSPACE -InstallType "SharedInstance"           
           . $env:GITHUB_WORKSPACE/Ed-Fi-ODS-Implementation/logistics/scripts/run-smoke-tests.ps1 -testSets @("NonDestructiveApi", "NonDestructiveSdk")  -smokeTestDll "$env:GITHUB_WORKSPACE/Ed-Fi-ODS-Implementation/EdFi.Suite3.OdsApi.Sdk/lib/net6.0/EdFi.OdsApi.Sdk.dll" -smokeTestExe "$env:GITHUB_WORKSPACE/Ed-Fi-ODS/Utilities/DataLoading/EdFi.SmokeTest.Console/bin/Release/net6.0/EdFi.SmokeTest.Console.dll" -buildConfiguration "Release"
      shell: pwsh
    - name: Upload SandboxAdmin,SwaggerUI,WebApi,Database,EdFi.Ods.Api.TestSdk,EdFi.Suite3.OdsApi.Sdk,EdFi.Ods.Api.TestSdk,EdFi.Suite3.SmokeTest.Console NugetPackages
      if: success()
      uses: actions/upload-artifact@6673cd052c4cd6fcf4b4e6e60ea986c889389535 # v3.0.0
      with:
        name: NugetPackages.Artifacts
        path: ${{ github.workspace }}/Ed-Fi-ODS-Implementation/NugetPackages/*.nupkg
