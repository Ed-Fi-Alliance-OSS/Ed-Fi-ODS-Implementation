# SPDX-License-Identifier: Apache-2.0
# Licensed to the Ed-Fi Alliance under one or more agreements.
# The Ed-Fi Alliance licenses this file to you under the Apache License, Version 2.0.
# See the LICENSE and NOTICES files in the project root for more information.

name: Publish to Docker Hub
on:
  workflow_run:
    workflows:
      - "Docker Test"
    types:
      - completed
    branches:
      - main
  release:
    types: [published]      
  workflow_dispatch:

env:
  DOCKER_HUB_TOKEN: ${{ secrets.DOCKER_HUB_TOKEN }}
  DOCKER_USERNAME: ${{ vars.DOCKER_USERNAME }}
  REPOSITORY_OWNER: ${{ GITHUB.REPOSITORY_OWNER }}

jobs:
  docker-publish:
    if: ${{ github.event_name != 'workflow_run' || github.event.workflow_run.conclusion == 'success' }}
    name: Publish to Docker Hub
    runs-on: ubuntu-latest
    steps:
      - name: Check for Docker Hub Token
        if: ${{ env.REPOSITORY_OWNER == 'Ed-Fi-Alliance-OSS' && env.DOCKER_HUB_TOKEN == '' }}
        run: | 
          echo "::error::Missing Docker Hub Token"
          exit 1 

      - name: Exit success if Docker Hub Token is missing in forked repository
        if: ${{ env.DOCKER_HUB_TOKEN == '' }}
        run: |
          echo "Skipping Publish"
          
      - name: Wait 20s for Azure Artifacts caching
        if: ${{ env.DOCKER_HUB_TOKEN != '' }}
        run: sleep 20

      - name: Checkout Repository
        if: ${{ env.DOCKER_HUB_TOKEN != '' }}
        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # v3.3.0

      - name: Log in to Docker Hub
        if: ${{ env.DOCKER_HUB_TOKEN != '' }}
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a  # v2.1.0
        with:
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ env.DOCKER_HUB_TOKEN }}

      - name: Build and Push
        if: ${{ env.DOCKER_HUB_TOKEN != '' }}
        run: |
          ./get-versions.ps1 -PackageVersion 7.1

          $preRelease = $false
          if ($env:github_event_name -eq "release" -and $env:github_event_action -eq "published") {
            $preRelease =$true 
            Write-Host "This step is triggered by a published release."
           }

          $buildImagesParam = "-Push -PackageVersion 7.1 -Patch ${{ github.run_number }} "
              if ($preRelease) {
                $buildImagesParam += "-PreRelease"
              }
          Write-Host "prerelease is " + $preRelease  
          Write-Host "github_event_name is " + $env:github_event_name  
          Write-Host "github_event_action is " + $env:github_event_action 
          Write-Host -ForegroundColor Magenta "&  $buildImagesParam"
          # Note: all images will receive the same version number for this Docker release
          ./build-images.ps1 $buildImagesParam
        working-directory: Docker
        shell: pwsh

  
