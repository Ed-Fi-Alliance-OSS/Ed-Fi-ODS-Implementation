# SPDX-License-Identifier: Apache-2.0
# Licensed to the Ed-Fi Alliance under one or more agreements.
# The Ed-Fi Alliance licenses this file to you under the Apache License, Version 2.0.
# See the LICENSE and NOTICES files in the project root for more information.

name: Publish to Docker Hub
on:
  workflow_run:
    workflows:
      - "Docker Test"
    types:
      - completed
    branches:
      - main
  release:
    types: [published]
  workflow_dispatch:

env:
  DOCKER_HUB_TOKEN: ${{ secrets.DOCKER_HUB_TOKEN }}
  DOCKER_USERNAME: ${{ vars.DOCKER_USERNAME }}
  REPOSITORY_OWNER: ${{ GITHUB.REPOSITORY_OWNER }}
  CURRENT_STANDARD_VERSION: "5.0.0"
  PACKAGE_VERSION: "7.1"

jobs:

  FindStandardAndExtensionVersions:
    if: ${{ github.event_name != 'workflow_run' || github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    outputs:
      StandardVersions: ${{ steps.Set_StandardVersions.outputs.StandardVersions }}
      ExtensionVersions: ${{ steps.Set_ExtensionVersions.outputs.ExtensionVersions }}
    steps:
      - name: Check for Docker Hub Token
        if: ${{ env.REPOSITORY_OWNER == 'Ed-Fi-Alliance-OSS' && env.DOCKER_HUB_TOKEN == '' }}
        run: | 
          echo "::error::Missing Docker Hub Token"
          exit 1

      - name: Exit success if Docker Hub Token is missing in forked repository
        if: ${{ env.DOCKER_HUB_TOKEN == '' }}
        run: |
          echo "Skipping Publish"
      
      - name: Checkout Ed-Fi-ODS
        if: ${{ env.DOCKER_HUB_TOKEN != '' }}
        uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579 # v2
        with:
          repository: Ed-Fi-Alliance-OSS/Ed-Fi-ODS
          path: Ed-Fi-ODS/

      - name: Checkout Ed-Fi-Extensions
        if: ${{ env.DOCKER_HUB_TOKEN != '' }}
        uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579 # v2
        with:
            repository: Ed-Fi-Alliance-OSS/Ed-Fi-Extensions
            path: Ed-Fi-Extensions/

      - name: Is pull request branch exists in Ed-Fi-Extensions
        if: ${{ env.DOCKER_HUB_TOKEN != '' }}
        working-directory: ./Ed-Fi-ODS/
        shell: pwsh
        run: |
          .\build.githubactions.ps1 CheckoutBranch -RelativeRepoPath "../Ed-Fi-Extensions"

      - name: Set StandardVersions
        if: ${{ env.DOCKER_HUB_TOKEN != '' }}
        id: Set_StandardVersions
        working-directory: ./Ed-Fi-ODS/
        run: |
          $output = .\build.githubactions.ps1 StandardVersions -ProjectFile "$env:GITHUB_WORKSPACE/Ed-Fi-ODS/Application/EdFi.Ods.Standard/EdFi.Ods.Standard.csproj"
          echo "StandardVersions=$output" >> $env:GITHUB_OUTPUT
          Write-host "StandardVersions is  $output"
        shell: pwsh

      - name: Set ExtensionVersions
        if: ${{ env.DOCKER_HUB_TOKEN != '' }}
        id: Set_ExtensionVersions
        working-directory: ./Ed-Fi-Extensions/
        run: |
          $output = .\build.githubactions.ps1 ExtensionVersions -ProjectFile "$env:GITHUB_WORKSPACE/Ed-Fi-Extensions/Extensions/EdFi.Ods.Extensions.TPDM/EdFi.Ods.Extensions.TPDM.csproj"
          echo "ExtensionVersions=$output" >> $env:GITHUB_OUTPUT
          Write-host "ExtensionVersions is  $output"
        shell: pwsh

  docker-publish:
    if: ${{ always() && env.DOCKER_HUB_TOKEN != '' }}
    needs: FindStandardAndExtensionVersions
    runs-on: ubuntu-latest
    strategy:
      matrix:
        StandardVersion: ${{ fromJson(needs.FindStandardAndExtensionVersions.outputs.StandardVersions) }}
        ExtensionVersion: ${{ fromJson(needs.FindStandardAndExtensionVersions.outputs.ExtensionVersions) }}
    name: Publish to Docker Hub (Standard ${{ matrix.StandardVersion }} Extension ${{ matrix.ExtensionVersion }})
    steps:
      - name: Wait 20s for Azure Artifacts caching
        run: sleep 20

      - name: Checkout Repository
        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # v3.3.0

      - name: Log in to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a  # v2.1.0
        with:
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ env.DOCKER_HUB_TOKEN }}

      - name: Build and Push
        run: |
          ./get-versions.ps1 -PackageVersion ${{ env.PACKAGE_VERSION }} -StandardVersion ${{ matrix.StandardVersion }} -ExtensionVersion ${{ matrix.ExtensionVersion }}

          # Note: all images will receive the same version number for this Docker release
          if ($env:github_event_name -eq "release" -and $env:github_event_action -eq "published") {
            ./build-images.ps1 -Push -PackageVersion ${{ env.PACKAGE_VERSION }} -Patch ${{ github.run_number }}
            Write-Host "This step is triggered by a published release."
          }
          else
          {
           ./build-images.ps1 -Push -PackageVersion ${{ env.PACKAGE_VERSION }} -Patch ${{ github.run_number }} -PreRelease
          }
        working-directory: Docker
        shell: pwsh
