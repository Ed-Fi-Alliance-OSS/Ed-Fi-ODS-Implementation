# SPDX-License-Identifier: Apache-2.0
# Licensed to the Ed-Fi Alliance under one or more agreements.
# The Ed-Fi Alliance licenses this file to you under the Apache License, Version 2.0.
# See the LICENSE and NOTICES files in the project root for more information.

name: Docker Test

on:
  workflow_run:
    workflows:
      - "Publish to Azure Artifacts"
    types:
      - completed
    branches: [main]
  pull_request:
    branches: [main, 'ODS-*']
    paths:
      - "Docker/**/*"
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  CURRENT_STANDARD_VERSION: "5.0.0"
  PACKAGE_VERSION: "7.2"

jobs:
  docker-lint:
    if: ${{ github.event_name != 'workflow_run' || github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        image:
          - ods-api-bulk-load-console/alpine
          - ods-api-db-admin/alpine/pgsql
          - ods-api-db-ods-minimal/alpine/pgsql
          - ods-api-db-ods-sandbox/alpine/pgsql
          - ods-api-swaggerui/alpine
          - ods-api-web-api/alpine/mssql
          - ods-api-web-api/alpine/pgsql
          - ods-api-web-sandbox-admin/alpine/mssql
          - ods-api-web-sandbox-admin/alpine/pgsql
    steps:
      - name: Checkout code
        uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608 # v4

      - uses: hadolint/hadolint-action@54c9adbab1582c2ef04b2016b760714a4bfde3cf # v3.1.0
        name: Run Linter on Local Dockerfile
        with:
          dockerfile: Docker/${{ matrix.image }}/Dockerfile

  FindStandardAndExtensionVersions:
    runs-on: ubuntu-latest
    outputs:
      StandardVersions: ${{ steps.Set_StandardVersions.outputs.StandardVersions }}
      ExtensionVersions: ${{ steps.Set_ExtensionVersions.outputs.ExtensionVersions }}
    steps:
      - name: Checkout Ed-Fi-ODS
        uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608 # v4
        with:
          repository: Ed-Fi-Alliance-OSS/Ed-Fi-ODS
          path: Ed-Fi-ODS/

      - name: Checkout Ed-Fi-Extensions
        uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608 # v4
        with:
            repository: Ed-Fi-Alliance-OSS/Ed-Fi-Extensions
            path: Ed-Fi-Extensions/

      - name: Is pull request branch exists in Ed-Fi-Extensions
        working-directory: ./Ed-Fi-ODS/
        shell: pwsh
        run: |
          .\build.githubactions.ps1 CheckoutBranch -RelativeRepoPath "../Ed-Fi-Extensions"

      - name: Set StandardVersions
        id: Set_StandardVersions
        working-directory: ./Ed-Fi-ODS/
        run: |
          $output = .\build.githubactions.ps1 StandardVersions -ProjectFile "$env:GITHUB_WORKSPACE/Ed-Fi-ODS/Application/EdFi.Ods.Standard/EdFi.Ods.Standard.csproj"
          Add-Content -Path $env:GITHUB_OUTPUT -Value "StandardVersions=$output"
          Write-host "StandardVersions is  $output"
        shell: pwsh

      - name: Set ExtensionVersions
        id: Set_ExtensionVersions
        working-directory: ./Ed-Fi-Extensions/
        run: |
          $output = .\build.githubactions.ps1 ExtensionVersions -ProjectFile "$env:GITHUB_WORKSPACE/Ed-Fi-Extensions/Extensions/EdFi.Ods.Extensions.TPDM/EdFi.Ods.Extensions.TPDM.csproj"
          Add-Content -Path $env:GITHUB_OUTPUT -Value "ExtensionVersions=$output"
          Write-host "ExtensionVersions is  $output"
        shell: pwsh

  docker-build:
    if: ${{ always() }}
    needs: FindStandardAndExtensionVersions
    runs-on: ubuntu-latest
    strategy:
      matrix:
        StandardVersion: ${{ fromJson(needs.FindStandardAndExtensionVersions.outputs.StandardVersions) }}
        ExtensionVersion: ${{ fromJson(needs.FindStandardAndExtensionVersions.outputs.ExtensionVersions) }}
    name: Docker Build (Standard ${{ matrix.StandardVersion }} Extension ${{ matrix.ExtensionVersion }})

    steps:
      - name: Checkout code
        uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608 # v4

      - name: Build all of the images
        # To confirm no errors occur. The "local" one will be built by the e2e
        # testing process.
        run: |
          ./get-versions.ps1 -PackageVersion ${{ env.PACKAGE_VERSION }} -StandardVersion ${{ matrix.StandardVersion }} -ExtensionVersion ${{ matrix.ExtensionVersion }} -PreRelease
          ./build-images.ps1 -PackageVersion ${{ env.PACKAGE_VERSION }} -PreRelease
        working-directory: Docker
        shell: pwsh
